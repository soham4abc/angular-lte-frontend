var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/ActionComponent.html",[0,0.279,1,0.945]],["body/components/ActionComponent.html",[0,0.427,1,1.56,2,1.399,3,0.175,4,0.152,5,1.123,6,1.123,7,0.152,8,2.968,9,1.065,10,2.255,11,1.523,12,1.783,13,1.554,14,0.32,15,1.019,16,5.944,17,5.944,18,5.944,19,4.11,20,4.191,21,4.801,22,4.191,23,4.191,24,4.191,25,0.64,26,0.02,27,1.058,28,3.468,29,6.619,30,3.468,31,3.468,32,3.468,33,3.468,34,1.107,35,2.204,36,3.468,37,3.468,38,0.269,39,4.11,40,5.088,41,0.401,42,0.175,43,0.152,44,2.344,45,3.468,46,3.468,47,3.468,48,0.777,49,1.554,50,1.554,51,0.91,52,1.826,53,1.123,54,0.88,55,1.123,56,0.91,57,1.123,58,0.91,59,2.331,60,1.123,61,0.91,62,1.011,63,1.123,64,0.91,65,1.328,66,1.123,67,0.91,68,1.123,69,0.91,70,1.011,71,1.123,72,0.91,73,1.123,74,0.91,75,1.011,76,1.554,77,0.91,78,1.123,79,0.91,80,1.123,81,0.91,82,1.123,83,0.91,84,1.123,85,0.91,86,1.123,87,0.91,88,1.123,89,0.91,90,0.959,91,0.959,92,0.736,93,1.065,94,0.864,95,1.011,96,1.123,97,0.009,98,0.013,99,0.009]],["title/components/ActionParentComponent.html",[0,0.279,56,0.945]],["body/components/ActionParentComponent.html",[0,0.463,1,0.807,2,1.285,3,0.155,4,0.135,5,0.995,6,0.995,7,0.135,9,0.944,10,2.225,11,1.22,12,1.669,13,1.427,14,0.283,15,0.936,20,4.979,22,3.356,23,3.356,24,3.356,25,0.668,26,0.021,27,1.022,34,1.199,35,2.233,38,0.342,41,0.356,42,0.155,43,0.135,48,0.688,49,1.427,50,1.427,51,0.807,52,1.73,53,0.995,54,1.022,55,0.995,56,1.479,57,0.995,58,0.807,59,2.29,60,0.995,61,0.807,62,0.896,63,0.995,64,0.807,65,1.22,66,0.995,67,0.807,68,0.995,69,0.807,70,0.896,71,0.995,72,0.807,73,0.995,74,0.807,75,0.896,76,1.427,77,0.807,78,0.995,79,0.807,80,0.995,81,0.807,82,0.995,83,0.807,84,0.995,85,0.807,86,0.995,87,0.807,88,0.995,89,0.807,90,0.85,91,0.85,92,0.652,93,0.944,94,0.765,95,0.896,96,0.995,97,0.008,98,0.012,99,0.008,100,2.63,101,1.876,102,5.156,103,0.792,104,1.468,105,1.669,106,4.54,107,4.409,108,5.634,109,4.409,110,3.073,111,1.262,112,0.955,113,3.774,114,3.073,115,3.774,116,3.073,117,3.774,118,3.073,119,3.073,120,2.586,121,3.073,122,3.073,123,1.947,124,1.947,125,4.409,126,2.63,127,3.073,128,3.073,129,3.073,130,3.073,131,3.073,132,3.073,133,2.121,134,3.073,135,3.073,136,3.073,137,2.63,138,3.073,139,3.073,140,3.073,141,1.308,142,3.073,143,3.073,144,3.073,145,3.073,146,0.85,147,1.802]],["title/injectables/Api.html",[148,0.945,149,1.84]],["body/injectables/Api.html",[3,0.117,4,0.102,7,0.102,14,0.215,15,0.761,25,0.692,26,0.021,27,0.989,34,1.066,38,0.339,41,0.269,42,0.117,43,0.102,44,2.091,54,0.896,90,1.359,97,0.006,98,0.01,99,0.006,103,0.644,104,0.761,105,1.89,106,3.739,111,1.35,112,0.95,133,1.606,141,2.385,146,1.468,148,0.941,149,3.524,150,1.05,151,1.992,152,4.03,153,3.585,154,3.585,155,3.585,156,3.585,157,5.305,158,3.069,159,4.359,160,4.373,161,4.913,162,4.913,163,4.913,164,4.913,165,0.715,166,1.992,167,4.038,168,4.913,169,2.683,170,2.327,171,4.373,172,6.427,173,4.373,174,4.205,175,5.717,176,3.585,177,3.585,178,3.585,179,1.896,180,2.327,181,5.604,182,3.585,183,6.029,184,6.679,185,6.316,186,3.585,187,2.327,188,2.728,189,1.992,190,3.585,191,6.743,192,2.327,193,3.585,194,3.585,195,5.604,196,3.585,197,2.327,198,4.913,199,3.585,200,3.585,201,2.327,202,1.224,203,1.224,204,2.327,205,2.271,206,3.585,207,2.327,208,1.606,209,4.913,210,4.913,211,4.373,212,3.585,213,2.327,214,3.585,215,3.585,216,3.585,217,0.99,218,2.327,219,1.992,220,1.771,221,1.606,222,1.771,223,1.992,224,1.606,225,4.436,226,1.771,227,2.327,228,2.327,229,2.327,230,5.305,231,2.327,232,3.585,233,2.327]],["title/components/AppComponent.html",[0,0.279,58,0.945]],["body/components/AppComponent.html",[0,0.36,1,0.674,2,1.126,3,0.129,4,0.113,5,0.831,6,0.831,7,0.113,9,0.789,10,2.174,11,0.71,12,0.831,13,0.831,14,0.237,15,0.82,25,0.416,26,0.021,27,0.826,34,0.934,35,1.319,38,0.468,41,0.297,42,0.129,43,0.113,44,1.093,48,0.575,49,1.251,50,1.251,51,0.674,52,1.587,53,0.831,54,0.931,55,0.831,56,0.674,57,0.831,58,1.357,59,2.269,60,0.831,61,0.674,62,0.748,63,0.831,64,0.674,65,1.069,66,0.831,67,0.674,68,0.831,69,0.674,70,0.748,71,0.831,72,0.674,73,0.831,74,0.674,75,0.748,76,1.251,77,0.674,78,0.831,79,0.674,80,0.831,81,0.674,82,0.831,83,0.674,84,0.831,85,0.674,86,0.831,87,0.674,88,0.831,89,0.674,90,0.71,91,0.71,92,0.545,93,0.789,94,0.64,95,0.748,96,0.831,97,0.007,98,0.011,99,0.007,101,1.644,103,0.694,105,1.504,111,1.041,112,0.788,126,4.984,141,2.199,146,0.71,152,1.772,158,3.307,165,0.789,179,1.43,224,2.667,225,3.206,234,2.568,235,2.198,236,2.227,237,3.864,238,4.645,239,1.553,240,3.864,241,3.864,242,2.64,243,3.864,244,2.568,245,5.168,246,4.645,247,3.73,248,3.299,249,3.299,250,6.042,251,2.568,252,3.864,253,3.864,254,2.568,255,2.537,256,3.864,257,3.864,258,1.743,259,3.864,260,3.864,261,3.864,262,2.568,263,3.864,264,2.568,265,1.402,266,1.312,267,3.864,268,0.925,269,2.198,270,1.954,271,1.954,272,3.864,273,2.568,274,1.159,275,2.568,276,1.159,277,2.568,278,2.198,279,2.568,280,1.954,281,2.198,282,2.568,283,2.568,284,2.568,285,2.568,286,2.568,287,3.864,288,2.568,289,2.568,290,2.568,291,2.568,292,2.568,293,2.568,294,2.568,295,2.096,296,2.568,297,2.568,298,2.568,299,1.627,300,3.864,301,2.568,302,3.864,303,2.568,304,2.568,305,2.568,306,2.568,307,2.568,308,2.568,309,3.307,310,2.568,311,2.667,312,2.568,313,2.568,314,2.568,315,2.568,316,2.568,317,2.568,318,2.568,319,2.568,320,2.568]],["title/modules/AppModule.html",[321,1.229,322,2.486]],["body/modules/AppModule.html",[3,0.132,4,0.115,7,0.115,26,0.021,38,0.562,41,0.303,42,0.132,43,0.115,48,0.587,58,1.758,62,0.764,97,0.007,98,0.011,99,0.007,149,1.339,159,1.809,169,3.205,217,1.115,221,2.708,249,3.205,258,2.122,265,2.143,266,1.339,268,0.944,269,2.244,270,1.995,271,1.995,276,1.183,278,3.359,295,1.183,299,2.486,321,1.339,322,4.989,323,1.183,324,1.257,325,2.568,326,2.402,327,2.568,328,2.143,329,2.244,330,2.244,331,2.244,332,2.244,333,2.244,334,3.718,335,2.813,336,3.441,337,3.205,338,3.441,339,2.497,340,3.718,341,2.143,342,1.431,343,1.257,344,2.621,345,2.301,346,2.301,347,3.924,348,3.924,349,2.621,350,2.301,351,2.621,352,1.183,353,1.339,354,3.359,355,3.246,356,3.246,357,2.708,358,2.244,359,2.244,360,2.621,361,2.621,362,2.621,363,2.621,364,2.621,365,2.621,366,2.621,367,2.621,368,3.924,369,2.986,370,2.708,371,2.621,372,3.359,373,1.339,374,3.924,375,4.703,376,3.359,377,2.244,378,2.621,379,2.621,380,2.621,381,1.995,382,2.621,383,2.301,384,3.359,385,2.621,386,2.621,387,2.244,388,2.621,389,2.621,390,2.621,391,2.621,392,2.244,393,2.244,394,2.621,395,2.621,396,2.621,397,2.621,398,2.621,399,2.621,400,2.621,401,3.924,402,5.868,403,4.703,404,5.868,405,5.591,406,4.703,407,4.703,408,4.703,409,2.621,410,2.621,411,3.924,412,2.621]],["title/injectables/AppService.html",[148,0.945,249,1.967]],["body/injectables/AppService.html",[2,1.436,3,0.181,4,0.158,7,0.294,14,0.332,15,1.046,25,0.53,26,0.021,27,0.965,34,0.99,38,0.435,41,0.417,42,0.181,43,0.158,54,0.576,97,0.01,98,0.013,99,0.01,103,0.885,105,1.818,111,0.806,112,0.611,133,2.485,146,1.883,148,1.293,150,1.624,152,3.4,159,3.876,165,1.106,166,3.081,167,4.596,174,5.59,175,6.037,179,1.671,188,3.749,205,3.121,217,1.532,219,3.081,220,2.74,221,2.485,222,2.74,223,3.081,224,3.876,225,2.485,249,3.298,274,1.624,276,1.624,309,4.217,321,1.682,323,2.223,413,3.081,414,4.926,415,4.926,416,6.039,417,6.039,418,4.926,419,4.926,420,6.531,421,4.926,422,4.926,423,3.6,424,6.039,425,4.926,426,4.365,427,3.6,428,4.926,429,4.926,430,2.889,431,3.6,432,4.926,433,3.6,434,3.6]],["title/components/AuthComponent.html",[0,0.279,61,0.945]],["body/components/AuthComponent.html",[0,0.516,1,1.098,2,1.587,3,0.21,4,0.184,5,1.354,6,1.354,7,0.184,9,1.284,10,2.292,11,1.157,12,1.354,13,1.354,26,0.02,38,0.324,41,0.484,42,0.21,43,0.184,48,0.937,49,1.763,50,1.763,51,1.098,52,1.97,53,1.354,54,0.968,55,1.354,56,1.098,57,1.354,58,1.098,59,2.396,60,1.354,61,1.684,62,1.765,63,1.354,64,1.098,65,1.506,66,1.354,67,1.098,68,1.354,69,1.098,70,1.219,71,1.354,72,1.098,73,1.354,74,1.098,75,1.219,76,1.763,77,1.098,78,1.354,79,1.098,80,1.354,81,1.098,82,1.354,83,1.098,84,1.354,85,1.098,86,1.354,87,1.098,88,1.354,89,1.098,90,1.157,91,1.157,92,0.887,93,1.284,94,1.042,95,1.219,96,1.354,97,0.011,98,0.015,99,0.011,236,2.005,435,3.579,436,2.452,437,3.579]],["title/guards/AuthGuard.html",[438,2.486,439,2.486]],["body/guards/AuthGuard.html",[3,0.216,4,0.188,7,0.188,14,0.395,15,1.174,25,0.596,26,0.021,27,0.884,34,0.861,38,0.502,41,0.496,42,0.216,43,0.188,54,0.884,97,0.012,98,0.015,99,0.012,101,1.824,104,1.3,105,1.387,111,1.239,112,0.938,120,3.244,146,1.53,147,2.513,148,1.452,165,1.316,248,3.748,255,3.345,268,1.544,274,1.934,276,1.934,299,2.715,339,2.971,426,4.228,438,2.958,439,3.818,440,4.286,441,3.668,442,5.541,443,4.286,444,4.286,445,5.532,446,6.473,447,6.473,448,4.286,449,3.668,450,5.532,451,4.286,452,3.668,453,4.286,454,5.243,455,2.652,456,3.668,457,3.668]],["title/modules/AuthModule.html",[321,1.229,334,2.282]],["body/modules/AuthModule.html",[0,0.449,3,0.192,4,0.168,7,0.168,26,0.021,38,0.542,41,0.442,42,0.192,43,0.168,48,0.855,61,1.745,74,1.782,75,1.687,81,1.782,83,1.782,97,0.01,98,0.014,99,0.01,141,2.463,217,1.625,247,3.395,258,2.612,268,1.375,295,1.723,321,1.303,323,1.723,324,1.831,325,3.161,326,1.95,327,2.8,328,2.8,334,4.547,341,2.8,342,2.085,343,1.831,345,2.239,346,3.007,350,3.007,369,3.902,373,1.95,383,3.629,458,3.268,459,3.268,460,3.818,461,3.248,462,3.818,463,3.818,464,3.818,465,4.388,466,4.388,467,2.085,468,2.906,469,3.268,470,2.906,471,3.667,472,2.906,473,2.239,474,3.248,475,2.458,476,2.419]],["title/injectables/AuthService.html",[148,0.945,335,1.727]],["body/injectables/AuthService.html",[3,0.182,4,0.159,7,0.159,14,0.333,15,1.048,25,0.734,26,0.021,27,1.089,34,1.314,38,0.469,41,0.418,42,0.182,43,0.159,54,1.07,92,1.569,97,0.01,98,0.013,99,0.01,103,0.887,104,1.048,105,1.17,111,1.499,112,1.135,146,1.809,148,1.297,149,3.53,150,1.631,165,1.11,226,2.75,249,3.655,335,2.368,471,3.129,474,3.129,477,3.093,478,4.939,479,4.939,480,4.939,481,4.939,482,2.494,483,3.614,484,4.939,485,3.614,486,2.523,487,4.939,488,3.3,489,3.614,490,3.759,491,4.939,492,3.614,493,4.939,494,3.614,495,4.939,496,3.614,497,4.939,498,3.614,499,3.614,500,2.494,501,2.29,502,3.614,503,3.614,504,3.614,505,3.614,506,3.614,507,3.614,508,3.614,509,3.614]],["title/injectables/BaseUrlProvider.html",[148,0.945,169,1.967]],["body/injectables/BaseUrlProvider.html",[3,0.252,4,0.22,7,0.22,14,0.461,25,0.656,26,0.02,27,0.974,38,0.388,41,0.579,42,0.252,43,0.22,97,0.014,98,0.017,99,0.014,103,1.095,104,1.533,148,1.6,150,2.256,169,3.328,179,1.686,202,2.08,203,2.08,510,4.28,511,4.537,512,6.843,513,6.574,514,6.094,515,5,516,6.094,517,5,518,5]],["title/interfaces/City.html",[519,1.533,520,2.282]],["body/interfaces/City.html",[3,0.258,4,0.225,7,0.225,14,0.472,25,0.715,26,0.02,38,0.397,42,0.258,54,1.103,97,0.014,98,0.017,99,0.014,103,1.111,112,1.049,179,1.838,255,3.999,488,3.896,519,2.18,520,3.918,521,3.004,522,4.384,523,6.899,524,5.122]],["title/classes/CommonResponse.html",[43,0.158,525,2.486]],["body/classes/CommonResponse.html",[3,0.264,4,0.231,7,0.231,14,0.484,25,0.723,26,0.02,27,1.073,42,0.264,43,0.231,95,1.957,97,0.014,98,0.017,99,0.014,103,1.128,120,3.681,141,2.857,179,1.736,525,4.332,526,3.079,527,4.494,528,6.714,529,5.25,530,5.25,531,5.25]],["title/injectables/CommonService.html",[148,0.945,336,2.112]],["body/injectables/CommonService.html",[3,0.215,4,0.187,7,0.187,14,0.393,15,1.171,25,0.696,26,0.021,27,1.07,34,1.228,38,0.474,41,0.494,42,0.215,43,0.187,54,0.977,92,0.906,97,0.012,98,0.015,99,0.012,103,0.991,104,1.54,111,1.369,112,1.037,146,1.691,148,1.448,149,3.649,150,1.925,165,1.31,226,3.247,336,3.235,482,2.945,488,4.02,500,2.945,501,2.703,532,3.652,533,4.721,534,5.531,535,4.721,536,4.266,537,5.516,538,4.266,539,3.652,540,4.266,541,5.516,542,4.266,543,3.652,544,4.266,545,4.266,546,4.266,547,4.266]],["title/interfaces/Company.html",[519,1.533,548,1.967]],["body/interfaces/Company.html",[3,0.234,4,0.204,7,0.204,14,0.429,25,0.766,26,0.02,38,0.361,42,0.234,97,0.013,98,0.016,99,0.013,103,1.048,112,0.989,179,2.08,519,1.981,520,4.557,521,2.73,548,3.184,549,3.985,550,4.606,551,6.673,552,6.673,553,6.673,554,4.606,555,6.673,556,4.655]],["title/components/CompanyProfileComponent.html",[0,0.279,64,0.945]],["body/components/CompanyProfileComponent.html",[0,0.348,1,0.638,2,1.08,3,0.122,4,0.107,5,0.786,6,0.786,7,0.107,9,0.746,10,2.157,11,0.672,12,0.786,13,0.786,14,0.224,15,0.786,25,0.638,26,0.021,27,1.053,34,1.01,35,2.024,38,0.348,41,0.281,42,0.122,43,0.107,44,1.577,48,0.544,49,1.199,50,1.199,51,0.638,52,1.543,53,0.786,54,0.865,55,0.786,56,0.638,57,0.786,58,0.638,59,2.235,60,0.786,61,0.638,62,0.708,63,0.786,64,1.319,65,1.844,66,0.786,67,0.638,68,0.786,69,0.638,70,0.708,71,0.786,72,0.638,73,0.786,74,0.638,75,0.708,76,1.199,77,0.638,78,0.786,79,0.638,80,0.786,81,0.638,82,0.786,83,0.638,84,0.786,85,0.638,86,0.786,87,0.638,88,0.786,89,0.638,90,0.672,91,0.672,92,0.516,93,0.746,94,0.605,95,0.708,96,0.786,97,0.007,98,0.01,99,0.007,103,0.666,104,1.534,105,1.454,111,0.83,112,0.628,146,0.672,147,2.173,165,1.379,189,3.171,202,1.946,203,1.946,208,1.677,239,1.489,274,1.096,352,1.096,426,2.557,455,1.776,548,3.337,554,4.091,557,5.706,558,2.079,559,3.705,560,4.491,561,4.491,562,5.024,563,4.491,564,6.587,565,3.705,566,3.705,567,5.024,568,5.024,569,2.347,570,4.491,571,2.429,572,3.705,573,2.429,574,3.705,575,5.7,576,2.429,577,1.327,578,2.429,579,2.429,580,2.429,581,3.705,582,3.705,583,2.429,584,2.429,585,5.409,586,2.429,587,3.705,588,3.705,589,5.024,590,3.705,591,3.705,592,3.705,593,2.429,594,2.429,595,2.429,596,2.429,597,3.099,598,2.429,599,3.705,600,2.429,601,2.429,602,2.429,603,2.429,604,2.429,605,3.705,606,2.819,607,3.171,608,2.819,609,2.173,610,3.705,611,3.705,612,3.705,613,4.3,614,3.705,615,3.705,616,3.171,617,3.705,618,3.705]],["title/classes/Constants.html",[43,0.158,619,1.84]],["body/classes/Constants.html",[3,0.316,4,0.198,7,0.198,14,0.416,25,0.71,26,0.02,27,1.055,42,0.227,43,0.198,97,0.012,98,0.016,99,0.012,103,1.027,104,1.4,179,1.825,202,2.252,203,2.252,511,5.075,526,2.645,577,3.122,619,2.92,620,3.861,621,5.597,622,6.275,623,6.275,624,6.275,625,6.275,626,4.511,627,4.511,628,4.893,629,4.511,630,5.716,631,4.511]],["title/interfaces/Country.html",[519,1.533,632,2.282]],["body/interfaces/Country.html",[3,0.254,4,0.221,7,0.221,14,0.465,25,0.739,26,0.02,42,0.254,97,0.014,98,0.017,99,0.014,103,1.1,112,1.164,179,2.034,488,3.869,519,2.145,521,2.956,543,5.873,632,3.88,633,4.314,634,6.861,635,6.861,636,6.861]],["title/classes/CustomValidators.html",[43,0.158,637,2.486]],["body/classes/CustomValidators.html",[3,0.21,4,0.183,7,0.183,14,0.384,26,0.021,27,1.062,38,0.515,42,0.21,43,0.183,97,0.011,98,0.015,99,0.011,103,0.975,104,1.409,202,2.267,203,2.267,473,2.441,511,5.087,526,2.441,550,4.169,621,5.61,637,3.747,638,3.563,639,4.598,640,3.086,641,4.598,642,5.182,643,4.598,644,4.163,645,4.598,646,4.163,647,4.598,648,4.163,649,4.598,650,4.163,651,4.163,652,3.563,653,4.163,654,4.163,655,4.163,656,3.168,657,4.163,658,2.441,659,4.163]],["title/components/DashboardComponent.html",[0,0.279,67,0.945]],["body/components/DashboardComponent.html",[0,0.401,1,0.811,2,1.29,3,0.155,4,0.136,5,1,6,1,7,0.136,9,0.948,10,2.226,11,0.854,12,1,13,1,14,0.285,15,0.939,25,0.557,26,0.02,27,1.024,34,1.201,35,2.04,38,0.239,41,0.357,42,0.155,43,0.136,48,0.692,49,1.432,50,1.432,51,0.811,52,1.734,53,1,54,0.903,55,1,56,0.811,57,1,58,0.811,59,2.317,60,1,61,0.811,62,0.9,63,1,64,0.811,65,1.224,66,1,67,1.482,68,1,69,0.811,70,0.9,71,1,72,0.811,73,1,74,0.811,75,0.9,76,1.432,77,0.811,78,1,79,0.811,80,1,81,0.811,82,1,83,0.811,84,1,85,0.811,86,1,87,0.811,88,1,89,0.811,90,0.854,91,0.854,92,0.655,93,0.948,94,0.769,95,1.742,96,1,97,0.008,98,0.012,99,0.008,103,0.795,104,1.543,111,0.692,112,0.524,120,2.595,147,2.595,179,1.653,202,1.51,203,1.51,239,1.779,606,3.367,607,3.787,608,3.367,609,3.969,660,2.643,661,4.425,662,3.935,663,5.647,664,5.647,665,5.647,666,4.425,667,4.833,668,3.088,669,3.088,670,3.088,671,4.425,672,3.088,673,3.088,674,3.088,675,5.116,676,3.088,677,5.171,678,4.426,679,4.426,680,3.088,681,3.787,682,4.425,683,3.787]],["title/modules/DashboardModule.html",[321,1.229,684,2.486]],["body/modules/DashboardModule.html",[0,0.338,3,0.219,4,0.191,7,0.191,26,0.021,38,0.534,41,0.504,42,0.219,43,0.191,48,0.975,67,1.84,87,1.809,94,1.717,97,0.012,98,0.015,99,0.012,141,1.853,247,2.554,258,2.785,268,1.569,295,1.965,321,1.487,323,1.965,324,2.088,325,3.371,326,2.224,327,2.378,328,3.052,341,3.052,342,2.378,343,2.088,345,2.554,346,3.278,350,3.62,373,2.224,383,2.554,387,4.784,461,3.541,476,2.759,609,2.554,684,4.989,685,3.728,686,3.728,687,4.355,688,6.173,689,4.355,690,4.355,691,4.355]],["title/components/EmployeeListComponent.html",[0,0.279,69,0.945]],["body/components/EmployeeListComponent.html",[0,0.306,1,0.522,2,0.924,3,0.1,4,0.087,5,0.644,6,0.644,7,0.087,9,0.611,10,2.091,11,0.877,12,0.644,13,0.644,14,0.183,15,0.673,20,3.008,22,2.413,23,2.413,24,2.413,25,0.634,26,0.021,27,1.055,34,1.213,35,2.142,38,0.443,41,0.23,42,0.1,43,0.087,44,0.847,48,0.446,49,1.026,50,1.026,51,0.522,52,1.385,53,0.644,54,1.044,55,0.644,56,1.183,57,0.644,58,0.522,59,2.155,60,0.644,61,0.522,62,0.58,63,0.644,64,0.522,65,0.877,66,0.644,67,0.522,68,0.644,69,1.183,70,1.76,71,0.644,72,0.522,73,0.644,74,0.522,75,0.58,76,1.026,77,0.522,78,0.644,79,0.522,80,0.644,81,0.522,82,0.644,83,0.522,84,0.644,85,0.522,86,0.644,87,0.522,88,0.644,89,0.522,90,0.55,91,0.55,92,0.422,93,0.611,94,0.496,95,0.58,96,0.644,97,0.005,98,0.009,99,0.005,101,1.349,103,0.57,104,1.424,105,0.644,106,1.514,111,1.28,112,0.969,113,2.713,115,2.713,117,2.713,123,1.26,124,1.26,137,2.713,141,0.847,146,0.55,165,0.611,167,1.514,179,0.877,202,1.349,203,1.349,208,2.188,217,0.847,236,1.895,239,1.275,242,2.303,276,0.898,295,1.783,337,2.865,352,0.898,353,1.016,486,2.303,488,1.859,550,3.111,554,2.188,577,1.086,608,2.413,619,1.016,640,1.619,641,2.413,652,2.713,692,1.703,693,3.859,694,3.17,695,3.952,696,3.952,697,3.952,698,3.952,699,3.952,700,3.17,701,3.859,702,4.508,703,3.17,704,3.17,705,3.17,706,1.989,707,3.487,708,3.17,709,3.17,710,1.989,711,1.989,712,1.989,713,1.989,714,3.17,715,1.989,716,3.17,717,1.989,718,1.989,719,1.989,720,3.17,721,1.989,722,1.989,723,3.952,724,1.989,725,3.17,726,1.989,727,6.273,728,6.273,729,3.17,730,3.17,731,2.413,732,2.713,733,3.17,734,1.989,735,1.989,736,3.17,737,3.17,738,1.989,739,1.989,740,1.703,741,1.703,742,1.26,743,1.989,744,1.989,745,1.989,746,1.989,747,1.989,748,1.989,749,1.26,750,1.26,751,1.989,752,1.989,753,1.989,754,1.989,755,1.26,756,1.26,757,1.989,758,1.989,759,1.989,760,1.989,761,1.989,762,3.17,763,1.989,764,1.989,765,1.989,766,1.989,767,1.989,768,3.17,769,3.17,770,3.17,771,1.989,772,3.952,773,1.989,774,1.989,775,3.111,776,3.17,777,3.17]],["title/modules/EmployeeModule.html",[321,1.229,778,2.486]],["body/modules/EmployeeModule.html",[0,0.32,1,1.817,3,0.208,4,0.181,7,0.181,11,1.142,26,0.021,38,0.544,41,0.478,42,0.208,43,0.181,48,0.924,56,1.863,69,1.817,97,0.011,98,0.015,99,0.011,123,2.615,124,2.615,141,1.756,247,2.42,258,2.714,268,1.486,295,1.862,321,1.409,323,1.862,324,1.978,325,3.285,326,2.108,327,3.285,328,2.948,337,3.71,341,2.948,342,2.254,343,1.978,345,2.42,346,3.166,350,3.528,373,2.108,383,2.42,461,3.42,476,2.615,740,3.532,741,3.532,775,2.848,778,5.012,779,3.532,780,3.532,781,4.127,782,4.127,783,5.398,784,4.127,785,4.127,786,4.127,787,4.127]],["title/injectables/EmployeeService.html",[148,0.945,337,1.967]],["body/injectables/EmployeeService.html",[3,0.237,4,0.207,7,0.207,14,0.435,15,1.247,25,0.633,26,0.021,27,1.024,34,1.181,38,0.456,41,0.545,42,0.237,43,0.207,54,0.939,97,0.013,98,0.016,99,0.013,104,1.359,111,1.316,112,0.997,146,1.625,148,1.543,149,3.592,150,2.127,165,1.448,179,1.771,276,2.127,337,3.209,482,3.253,490,4.472,500,3.253,701,5.737,788,4.034,789,5.876,790,4.713,791,4.713,792,5.876,793,4.713,794,5.876]],["title/components/FooterComponent.html",[0,0.279,72,0.945]],["body/components/FooterComponent.html",[0,0.459,1,1.047,2,1.538,3,0.201,4,0.175,5,1.291,6,1.291,7,0.175,9,1.225,10,2.287,11,1.103,12,1.291,13,1.291,26,0.02,38,0.309,41,0.461,42,0.201,43,0.175,48,0.893,49,1.708,50,1.708,51,1.047,52,1.934,53,1.291,54,0.946,55,1.291,56,1.047,57,1.291,58,1.047,59,2.391,60,1.291,61,1.047,62,1.162,63,1.291,64,1.047,65,1.46,66,1.291,67,1.047,68,1.291,69,1.047,70,1.162,71,1.291,72,1.653,73,1.291,74,1.047,75,1.162,76,1.708,77,1.047,78,1.291,79,1.047,80,1.291,81,1.047,82,1.291,83,1.047,84,1.291,85,1.047,86,1.291,87,1.047,88,1.291,89,1.047,90,1.103,91,1.103,92,0.846,93,1.225,94,0.993,95,1.162,96,1.291,97,0.011,98,0.014,99,0.011,239,2.122,311,3.642,683,4.517,795,3.413,796,5.277,797,5.277,798,5.277,799,3.987,800,5.277,801,5.277,802,5.277,803,5.277,804,5.277,805,5.277]],["title/components/ForgotPasswordComponent.html",[0,0.279,74,0.945]],["body/components/ForgotPasswordComponent.html",[0,0.352,1,0.649,2,1.095,3,0.125,4,0.109,5,0.801,6,0.801,7,0.109,9,0.76,10,2.163,11,0.684,12,0.801,13,0.801,14,0.228,15,0.797,25,0.404,26,0.021,27,0.954,34,0.913,35,1.55,38,0.498,41,0.286,42,0.125,43,0.109,44,1.053,48,0.554,49,1.216,50,1.216,51,0.649,52,1.557,53,0.801,54,0.872,55,0.801,56,0.649,57,0.801,58,0.649,59,2.241,60,0.801,61,0.649,62,0.721,63,0.801,64,0.649,65,1.039,66,0.801,67,0.649,68,0.801,69,0.649,70,0.721,71,0.801,72,0.649,73,0.801,74,1.331,75,1.589,76,1.216,77,0.649,78,0.801,79,0.649,80,0.801,81,0.649,82,0.801,83,0.649,84,0.801,85,0.649,86,0.801,87,0.649,88,0.801,89,0.649,90,0.684,91,0.684,92,0.797,93,0.76,94,0.616,95,0.721,96,0.801,97,0.007,98,0.01,99,0.007,101,1.598,103,0.675,104,1.218,105,1.99,111,0.841,112,0.637,146,1.039,165,1.154,217,1.053,236,2.177,239,1.51,242,2.59,248,3.258,265,1.351,266,1.264,268,0.891,274,1.116,335,2.86,352,1.116,353,1.264,430,1.451,436,1.451,455,1.186,467,1.351,468,4.678,471,1.567,475,2.752,486,2.785,569,2.38,577,1.351,619,1.264,658,2.974,707,3.78,731,1.883,742,1.567,749,1.567,750,1.567,755,1.567,756,2.877,806,5.261,807,1.883,808,3.134,809,3.215,810,5.071,811,3.962,812,3.5,813,3.756,814,1.707,815,3.962,816,3.456,817,3.859,818,3.215,819,2.474,820,2.474,821,3.756,822,2.117,823,2.474,824,1.707,825,2.474,826,2.592,827,1.707,828,1.451,829,1.451,830,1.451,831,1.707,832,1.707,833,2.592,834,2.117,835,2.474,836,1.883,837,1.707,838,2.474,839,2.474,840,1.707,841,1.707,842,1.883,843,2.474,844,1.707,845,2.474,846,2.474,847,1.883,848,4.117,849,3.134,850,2.474,851,2.474,852,2.117,853,1.883,854,1.883,855,2.474,856,1.883,857,2.117,858,2.474,859,1.567,860,1.707,861,2.38,862,5.071,863,3.962,864,4.369,865,3.215,866,3.756,867,3.756]],["title/components/HeaderComponent.html",[0,0.279,77,0.945]],["body/components/HeaderComponent.html",[0,0.414,1,0.858,2,1.343,3,0.165,4,0.144,5,1.059,6,1.059,7,0.144,9,1.004,10,2.241,11,0.904,12,1.059,13,1.059,14,0.301,15,0.978,25,0.574,26,0.02,27,0.926,34,0.657,35,1.116,38,0.449,41,0.378,42,0.165,43,0.144,48,0.732,49,1.492,50,1.492,51,0.858,52,1.779,53,1.059,54,0.926,55,1.059,56,0.858,57,1.059,58,0.858,59,2.335,60,1.059,61,0.858,62,0.953,63,1.059,64,0.858,65,1.603,66,1.059,67,0.858,68,1.059,69,0.858,70,0.953,71,1.059,72,0.858,73,1.059,74,0.858,75,0.953,76,1.492,77,1.521,78,1.059,79,0.858,80,1.059,81,0.858,82,1.059,83,0.858,84,1.059,85,0.858,86,1.059,87,0.858,88,1.059,89,0.858,90,0.904,91,0.904,92,0.694,93,1.004,94,0.814,95,0.953,96,1.059,97,0.009,98,0.013,99,0.009,103,0.828,104,1.435,105,1.492,111,0.732,112,0.555,165,1.004,169,3.461,179,1.603,202,1.116,203,1.116,239,1.853,248,3.556,268,1.178,276,1.475,339,2.771,343,2.209,456,2.799,457,2.799,640,3.326,667,3.944,861,2.92,868,2.799,869,4.608,870,4.608,871,5.336,872,4.959,873,3.27,874,4.608,875,3.27,876,3.27,877,3.27,878,2.257,879,3.27,880,3.27,881,3.27,882,3.27,883,3.27,884,4.608,885,4.608,886,3.944]],["title/injectables/JWTUtils.html",[148,0.945,338,2.112]],["body/injectables/JWTUtils.html",[3,0.22,4,0.192,7,0.192,14,0.402,15,1.188,25,0.47,26,0.021,27,0.895,34,1.125,38,0.338,41,0.505,42,0.22,43,0.192,52,1.719,54,0.895,97,0.012,98,0.015,99,0.012,104,1.464,111,1.254,112,0.949,133,3.013,146,1.709,148,1.469,150,1.969,152,3.863,179,1.709,225,3.013,311,3.013,338,3.624,455,2.684,658,2.56,859,2.766,887,3.736,888,5.598,889,5.598,890,5.598,891,4.365,892,5.769,893,5.598,894,4.365,895,4.365,896,4.365,897,4.365,898,4.365,899,4.791,900,4.365,901,5.598,902,4.365,903,4.365,904,4.365,905,4.365,906,4.365,907,4.365,908,4.365]],["title/components/LayoutComponent.html",[0,0.279,79,0.945]],["body/components/LayoutComponent.html",[0,0.43,1,0.922,2,1.412,3,0.177,4,0.154,5,1.137,6,1.137,7,0.154,9,1.079,10,2.258,11,0.972,12,1.137,13,1.137,14,0.324,15,1.028,25,0.378,26,0.02,27,0.886,34,0.974,35,1.654,38,0.43,41,0.406,42,0.177,43,0.154,48,0.787,49,1.568,50,1.568,51,0.922,52,1.926,53,1.137,54,0.956,55,1.137,56,0.922,57,1.137,58,0.922,59,2.356,60,1.137,61,0.922,62,1.024,63,1.137,64,0.922,65,1.34,66,1.137,67,0.922,68,1.137,69,0.922,70,1.024,71,1.137,72,0.922,73,1.137,74,0.922,75,1.024,76,1.568,77,0.922,78,1.137,79,1.569,80,1.137,81,0.922,82,1.137,83,0.922,84,1.137,85,0.922,86,1.137,87,0.922,88,1.137,89,0.922,90,0.972,91,0.972,92,0.746,93,1.079,94,0.875,95,1.024,96,1.137,97,0.01,98,0.013,99,0.01,101,2.061,104,1.177,105,1.137,111,0.787,112,0.596,165,1.079,236,2.658,239,1.948,242,3.053,265,1.918,266,1.794,430,2.06,436,2.06,814,2.425,815,4.474,840,2.425,841,2.425,909,2.673,910,4.146,911,4.844,912,5.977,913,3.513,914,3.513,915,3.513,916,3.007,917,3.513,918,2.226,919,3.007,920,3.513,921,3.007,922,3.513,923,3.513,924,3.007,925,3.513,926,3.513,927,3.513,928,3.513,929,3.513,930,3.513,931,3.513,932,3.513,933,3.513]],["title/modules/LayoutModule.html",[321,1.229,934,2.486]],["body/modules/LayoutModule.html",[0,0.271,3,0.176,4,0.153,7,0.153,26,0.021,38,0.552,41,0.404,42,0.176,43,0.153,48,0.783,65,0.966,72,1.699,77,1.699,79,1.87,85,1.699,97,0.01,98,0.013,99,0.01,141,1.487,159,2.411,217,1.487,247,2.049,258,2.495,268,1.258,295,1.576,321,1.647,323,1.576,324,1.675,325,3.019,326,2.824,327,2.635,328,2.635,341,2.635,342,1.908,343,1.675,345,2.049,346,2.83,350,3.242,354,4.131,355,3.331,356,3.816,357,3.331,358,2.99,359,2.99,369,3.673,373,1.784,383,3.89,384,4.732,392,2.99,393,2.99,439,3.816,442,2.99,461,3.057,470,4.207,472,4.207,473,3.242,476,2.213,609,2.83,775,2.411,910,5.104,934,4.917,935,2.99,936,2.99,937,2.99,938,3.493,939,3.493,940,3.493,941,3.493,942,3.493,943,3.493,944,3.493,945,3.493,946,3.493,947,3.493]],["title/components/LoginComponent.html",[0,0.279,81,0.945]],["body/components/LoginComponent.html",[0,0.315,1,0.544,2,0.954,3,0.104,4,0.091,5,0.671,6,0.671,7,0.091,9,0.636,10,2.105,11,0.573,12,0.671,13,0.671,14,0.191,15,0.695,25,0.437,26,0.021,27,0.977,34,0.816,35,1.386,38,0.499,41,0.24,42,0.104,43,0.091,44,2.38,48,0.464,49,1.06,50,1.06,51,0.544,52,1.417,53,0.671,54,0.803,55,0.671,56,0.544,57,0.671,58,0.544,59,2.172,60,0.671,61,0.544,62,0.604,63,0.671,64,0.544,65,0.906,66,0.671,67,0.544,68,0.671,69,0.544,70,0.604,71,0.671,72,0.544,73,0.671,74,0.544,75,1.464,76,1.06,77,0.544,78,0.671,79,0.544,80,0.671,81,1.211,82,0.671,83,0.544,84,0.671,85,0.544,86,0.671,87,0.544,88,0.671,89,0.544,90,0.573,91,0.573,92,1.23,93,0.636,94,0.516,95,0.604,96,0.671,97,0.006,98,0.009,99,0.006,101,1.393,103,0.588,104,1.133,105,2.082,111,0.733,112,0.555,146,1.276,165,1.006,202,0.707,203,0.707,205,1.313,217,0.882,236,1.946,239,1.316,242,2.356,248,3.054,265,1.132,266,1.058,268,0.746,274,0.935,295,0.935,335,2.681,338,2.705,339,2.38,352,0.935,353,1.058,430,1.92,436,1.215,455,0.993,467,1.132,471,3.183,474,2.923,475,3.158,486,2.856,501,1.313,569,2.075,577,1.132,619,1.058,640,1.673,658,2.705,707,3.543,731,1.577,742,1.313,749,1.313,750,1.313,755,1.313,756,2.572,808,2.802,811,3.686,812,3.184,814,1.43,815,3.686,816,3.09,817,3.511,824,1.43,826,2.802,827,1.43,828,1.215,829,1.215,830,1.215,831,1.43,832,1.43,833,2.26,834,1.774,836,1.577,837,2.26,840,1.43,841,1.43,842,1.577,844,1.43,847,1.577,848,4.44,849,2.802,853,1.577,854,1.577,856,1.577,859,1.313,860,1.43,861,2.075,863,4.376,864,4.412,878,1.43,886,4.962,899,3.475,918,2.075,919,1.774,948,1.577,949,3.275,950,4.613,951,3.275,952,4.613,953,3.275,954,2.072,955,2.072,956,3.275,957,2.072,958,2.072,959,2.072,960,2.072,961,1.577,962,2.072,963,2.072,964,2.072,965,2.072,966,1.774,967,1.774,968,2.072,969,1.774,970,1.774,971,3.948,972,1.774,973,2.803,974,1.774,975,1.774,976,1.774,977,1.774,978,2.072,979,2.072,980,2.072,981,2.072,982,2.072,983,2.072,984,3.475,985,2.072,986,2.072,987,1.774,988,1.774,989,1.774,990,1.774,991,3.275,992,4.613,993,4.613,994,3.948,995,3.948,996,4.613]],["title/modules/ProfileModule.html",[321,1.229,997,2.486]],["body/modules/ProfileModule.html",[0,0.454,3,0.197,4,0.172,7,0.172,26,0.021,38,0.538,41,0.453,42,0.197,43,0.172,48,0.877,64,1.793,65,1.442,89,1.793,90,1.621,91,1.89,92,1.244,97,0.011,98,0.014,99,0.011,141,2.494,247,3.437,258,2.644,268,1.409,295,1.766,321,1.336,323,1.766,324,1.876,325,3.2,326,1.999,327,2.137,328,2.846,341,2.846,342,2.137,343,1.876,345,2.295,346,3.056,350,3.437,352,1.766,373,1.999,383,3.665,461,3.302,465,4.461,466,4.461,467,2.137,469,3.349,470,2.978,472,2.978,473,2.295,475,2.499,476,2.479,548,2.846,597,2.701,997,4.897,998,3.349,999,3.349,1000,3.913,1001,5.212,1002,3.913,1003,5.212,1004,3.913,1005,2.978]],["title/components/RegisterComponent.html",[0,0.279,83,0.945]],["body/components/RegisterComponent.html",[0,0.269,1,0.433,2,0.793,3,0.083,4,0.072,5,0.533,6,0.533,7,0.072,9,0.506,10,2.019,11,0.456,12,0.533,13,0.533,14,0.152,15,0.577,25,0.548,26,0.021,27,1.051,34,0.966,35,1.641,38,0.496,41,0.191,42,0.083,43,0.072,44,2.417,48,0.369,49,0.881,50,0.881,51,0.433,52,1.239,53,0.533,54,0.931,55,0.533,56,0.433,57,0.533,58,0.433,59,2.07,60,0.533,61,0.433,62,0.48,63,0.533,64,0.433,65,0.753,66,0.533,67,0.433,68,0.533,69,0.433,70,0.48,71,0.533,72,0.433,73,0.533,74,0.433,75,0.48,76,0.881,77,0.433,78,0.533,79,0.433,80,0.533,81,0.433,82,0.533,83,1.059,84,0.533,85,0.433,86,0.533,87,0.433,88,0.533,89,0.433,90,0.456,91,0.456,92,0.577,93,0.506,94,0.41,95,0.48,96,0.533,97,0.004,98,0.007,99,0.004,101,1.158,103,0.489,104,1.433,105,1.839,111,0.904,112,0.684,146,1.525,165,0.506,217,0.701,236,1.666,239,1.094,242,2.061,248,2.778,255,3.493,265,0.9,266,0.842,268,0.593,274,0.743,335,2.439,336,2.983,339,2.165,352,0.743,353,0.842,430,0.966,436,0.966,455,0.79,467,0.9,473,2.366,474,3.223,475,2.55,486,2.061,520,3.69,525,2.784,533,2.329,534,3.453,535,2.329,569,1.724,577,2.203,619,0.842,632,3.839,639,3.07,640,2.061,656,2.07,658,1.596,707,3.223,742,1.044,749,2.556,750,2.556,755,2.556,756,3.493,808,2.398,811,3.318,812,2.784,814,1.137,815,3.318,816,2.645,817,3.07,824,1.137,826,3.805,827,1.137,828,0.966,829,0.966,830,0.966,831,1.137,832,1.137,833,1.878,836,1.254,837,3.67,840,1.137,841,1.137,842,1.254,844,1.137,847,1.254,848,4.106,849,3.318,852,1.41,853,1.254,854,1.254,856,3.07,857,1.41,859,1.044,860,1.137,861,1.724,863,4.459,864,3.07,865,2.329,878,1.137,921,1.41,961,1.254,969,1.41,970,1.41,971,3.822,972,1.41,973,2.329,974,1.41,975,1.41,976,1.41,977,1.41,984,1.41,987,1.41,988,1.41,989,1.41,990,1.41,995,3.453,1006,1.41,1007,2.721,1008,3.475,1009,3.475,1010,4.034,1011,3.475,1012,2.721,1013,4.034,1014,2.721,1015,2.721,1016,1.648,1017,1.648,1018,2.721,1019,1.648,1020,1.648,1021,1.648,1022,2.721,1023,1.648,1024,1.648,1025,1.648,1026,1.648,1027,1.648,1028,1.254,1029,1.648,1030,1.648,1031,1.648,1032,1.648,1033,1.648,1034,1.648,1035,1.648,1036,1.648,1037,1.648,1038,1.41,1039,1.648,1040,1.648,1041,1.648,1042,1.648,1043,1.648,1044,1.648,1045,1.648,1046,1.648,1047,1.044,1048,1.648,1049,1.648,1050,1.648,1051,1.648,1052,1.648,1053,1.648,1054,1.648,1055,1.648,1056,1.648,1057,1.648,1058,1.648,1059,1.648,1060,1.648,1061,1.648,1062,1.648,1063,3.475,1064,1.648,1065,1.648,1066,1.648,1067,1.648,1068,1.648,1069,1.648,1070,1.648,1071,1.648,1072,1.648,1073,1.648,1074,1.41,1075,1.648,1076,1.648,1077,2.721,1078,5.949,1079,2.721,1080,2.721,1081,2.721,1082,4.034,1083,4.034,1084,2.721]],["title/injectables/SessionService.html",[148,0.945,339,1.533]],["body/injectables/SessionService.html",[3,0.151,4,0.132,7,0.132,14,0.277,15,0.92,25,0.636,26,0.021,27,1.134,34,1.369,35,2.102,38,0.233,41,0.347,42,0.151,43,0.132,54,0.945,97,0.008,98,0.012,99,0.008,103,0.779,104,1.579,105,2.282,111,1.324,112,1.002,146,1.635,148,1.138,150,1.354,179,1.635,202,2.017,203,2.017,339,1.844,455,2.671,486,2.213,490,3.298,640,2.213,824,3.845,872,4.769,892,3.709,1028,4.24,1085,2.568,1086,5.909,1087,5.909,1088,5.909,1089,5.909,1090,5.909,1091,5.572,1092,5.572,1093,5.572,1094,4.333,1095,4.333,1096,4.333,1097,4.333,1098,4.333,1099,3,1100,3,1101,3,1102,3,1103,3,1104,3,1105,4.333,1106,3,1107,4.333,1108,3,1109,4.333,1110,3,1111,4.333,1112,4.333,1113,3,1114,4.333,1115,3,1116,3,1117,3,1118,3,1119,3,1120,3,1121,3,1122,4.333,1123,3,1124,4.333,1125,3,1126,4.333,1127,3,1128,3,1129,3,1130,4.333]],["title/components/SidebarComponent.html",[0,0.279,85,0.945]],["body/components/SidebarComponent.html",[0,0.439,1,0.958,2,1.449,3,0.184,4,0.16,5,1.181,6,1.181,7,0.16,9,1.121,10,2.267,11,1.009,12,1.181,13,1.181,14,0.336,15,1.055,26,0.02,27,0.583,34,0.733,35,1.246,38,0.283,41,0.422,42,0.184,43,0.16,48,0.817,49,1.61,50,1.61,51,0.958,52,1.865,53,1.181,54,0.904,55,1.181,56,0.958,57,1.181,58,0.958,59,2.367,60,1.181,61,0.958,62,1.063,63,1.181,64,0.958,65,1.814,66,1.181,67,0.958,68,1.181,69,0.958,70,1.063,71,1.181,72,0.958,73,1.181,74,0.958,75,1.063,76,1.61,77,0.958,78,1.181,79,0.958,80,1.181,81,0.958,82,1.181,83,0.958,84,1.181,85,1.594,86,1.181,87,0.958,88,1.181,89,0.958,90,1.564,91,1.009,92,1.2,93,1.121,94,0.909,95,1.063,96,1.181,97,0.01,98,0.014,99,0.01,101,2.116,141,1.553,220,3.784,221,3.431,222,3.784,236,2.711,239,1.999,242,3.102,295,1.646,343,2.384,475,2.384,548,2.715,609,2.916,775,3.431,916,3.123,924,4.256,1131,3.123,1132,4.972,1133,3.649,1134,3.649,1135,3.649,1136,3.649,1137,3.649,1138,3.649,1139,4.972,1140,4.972,1141,4.972]],["title/interfaces/State.html",[255,1.967,519,1.533]],["body/interfaces/State.html",[3,0.25,4,0.218,7,0.218,14,0.457,25,0.735,26,0.02,38,0.385,42,0.25,97,0.014,98,0.017,99,0.014,103,1.09,112,1.157,179,1.97,255,3.312,488,3.842,519,2.111,521,2.909,539,5.841,632,4.612,1142,4.246,1143,6.824,1144,6.824,1145,4.961]],["title/directives/StatusDirective.html",[51,0.945,94,0.897]],["body/directives/StatusDirective.html",[3,0.159,4,0.138,7,0.138,9,0.967,10,1.378,14,0.29,15,0.952,19,3.841,25,0.693,26,0.021,27,1.053,34,0.902,35,1.075,38,0.348,39,4.877,41,0.364,42,0.159,43,0.197,51,1.178,54,0.836,93,0.967,94,1.118,95,2.057,97,0.009,98,0.012,99,0.009,103,0.806,104,1.329,105,2.132,111,1.171,112,0.887,120,2.632,146,1.241,147,2.632,165,0.967,179,1.921,202,1.532,203,1.532,276,1.421,372,4.877,373,1.609,662,4.336,675,3.841,678,3.841,679,3.841,681,2.696,1146,2.696,1147,5.228,1148,4.488,1149,4.488,1150,5.228,1151,4.488,1152,5.228,1153,3.15,1154,5.698,1155,5.228,1156,5.698,1157,5.228,1158,3.15,1159,4.488,1160,3.15,1161,3.15,1162,3.15,1163,3.15,1164,4.488,1165,3.15,1166,4.488,1167,3.15,1168,6.701,1169,4.488,1170,4.488,1171,4.488,1172,3.15,1173,3.15,1174,4.488,1175,3.15,1176,3.15,1177,3.15,1178,3.15,1179,6.701,1180,3.15,1181,3.15,1182,3.15,1183,5.228,1184,3.15,1185,3.15,1186,4.488,1187,3.15,1188,3.15,1189,3.15,1190,3.15,1191,4.488,1192,3.15,1193,3.15,1194,3.15,1195,4.488,1196,3.15,1197,3.15,1198,3.15,1199,3.15,1200,2.397,1201,3.15]],["title/components/TestingComponent.html",[0,0.279,87,0.945]],["body/components/TestingComponent.html",[0,0.469,1,1.095,2,1.585,3,0.21,4,0.183,5,1.351,6,1.351,7,0.183,9,1.281,10,2.291,11,1.154,12,1.351,13,1.351,26,0.02,38,0.324,41,0.483,42,0.21,43,0.183,48,0.935,49,1.76,50,1.76,51,1.095,52,1.968,53,1.351,54,0.967,55,1.351,56,1.095,57,1.351,58,1.095,59,2.395,60,1.351,61,1.095,62,1.216,63,1.351,64,1.095,65,1.504,66,1.351,67,1.095,68,1.351,69,1.095,70,1.216,71,1.351,72,1.095,73,1.351,74,1.095,75,1.216,76,1.76,77,1.095,78,1.351,79,1.095,80,1.351,81,1.095,82,1.351,83,1.095,84,1.351,85,1.095,86,1.351,87,1.682,88,1.351,89,1.095,90,1.154,91,1.154,92,0.886,93,1.281,94,1.039,95,1.216,96,1.351,97,0.011,98,0.015,99,0.011,437,3.571,1202,3.571,1203,5.437,1204,5.437,1205,6.048,1206,4.172]],["title/classes/TokenInterceptor.html",[43,0.158,370,2.486]],["body/classes/TokenInterceptor.html",[3,0.228,4,0.199,7,0.199,14,0.417,15,1.215,25,0.616,26,0.021,27,0.915,34,0.909,38,0.487,42,0.228,43,0.199,44,2.436,54,0.723,62,1.831,97,0.012,98,0.016,99,0.012,101,2.436,103,1.029,104,1.333,111,1.013,112,0.767,146,1.251,202,1.544,203,1.544,217,1.924,274,2.04,339,2.899,370,3.951,426,4.336,449,5.377,452,3.87,526,2.652,1207,3.87,1208,6.282,1209,5.725,1210,4.522,1211,5.725,1212,6.604,1213,6.604,1214,4.522,1215,5.725,1216,4.522,1217,4.522,1218,4.522,1219,4.522,1220,4.522,1221,4.522,1222,4.522]],["title/components/UpdatePasswordComponent.html",[0,0.279,89,0.945]],["body/components/UpdatePasswordComponent.html",[0,0.327,1,0.577,2,0.999,3,0.111,4,0.097,5,0.711,6,0.711,7,0.097,9,0.675,10,2.125,11,0.608,12,0.711,13,0.711,14,0.203,15,0.728,25,0.454,26,0.021,27,1.012,34,0.847,35,1.439,38,0.499,41,0.254,42,0.111,43,0.097,44,2.587,48,0.492,49,1.11,50,1.11,51,0.577,52,1.463,53,0.711,54,0.914,55,0.711,56,0.577,57,0.711,58,0.577,59,2.196,60,0.711,61,0.577,62,0.64,63,0.711,64,0.577,65,0.949,66,0.711,67,0.577,68,0.711,69,0.577,70,0.64,71,0.711,72,0.577,73,0.711,74,0.577,75,0.64,76,1.11,77,0.577,78,0.711,79,0.577,80,0.711,81,0.577,82,0.711,83,0.577,84,0.711,85,0.577,86,0.711,87,0.577,88,0.711,89,1.251,90,1.681,91,0.608,92,1.255,93,0.675,94,0.547,95,0.64,96,0.711,97,0.006,98,0.009,99,0.006,101,1.459,103,0.616,104,1.162,105,1.915,111,0.768,112,0.582,146,1.429,165,0.675,202,0.75,203,1.171,217,0.935,236,2.022,239,1.379,242,2.433,248,1.2,268,0.791,274,0.992,276,0.992,299,1.392,335,2.741,339,2.433,352,0.992,353,1.122,436,1.289,454,1.881,455,1.054,467,1.2,473,2.011,475,3.351,486,1.752,501,1.392,569,2.173,577,1.2,619,1.122,628,1.881,637,1.517,639,3.626,640,2.796,656,3.626,658,2.011,662,1.672,707,3.468,742,1.392,749,1.392,750,1.392,755,1.392,756,1.392,807,1.672,808,2.91,809,2.935,811,3.778,812,3.288,818,1.881,822,1.881,826,4.195,827,2.367,828,1.289,829,1.289,830,1.289,831,1.517,832,1.517,833,2.367,837,2.91,844,1.517,848,4.29,849,2.91,859,1.392,860,1.517,863,4.29,878,1.517,961,1.672,1005,4.896,1028,1.672,1038,1.881,1223,5.507,1224,4.764,1225,3.429,1226,4.686,1227,2.198,1228,3.429,1229,2.198,1230,2.198,1231,3.429,1232,2.198,1233,2.198,1234,3.429,1235,2.198,1236,2.198,1237,2.198,1238,2.198,1239,2.935,1240,2.198,1241,2.198,1242,2.198,1243,2.198,1244,2.198,1245,2.198,1246,2.198,1247,2.198,1248,2.198,1249,2.198,1250,2.198,1251,2.198,1252,2.198,1253,2.198,1254,2.198,1255,2.198,1256,2.198,1257,2.198,1258,2.198,1259,3.429]],["title/interfaces/User.html",[92,0.764,519,1.533]],["body/interfaces/User.html",[3,0.213,4,0.186,7,0.186,14,0.391,25,0.775,26,0.02,38,0.329,42,0.213,92,1.166,97,0.012,98,0.015,99,0.012,103,0.987,112,1.257,120,3.573,179,2.085,475,3.09,486,3.293,519,1.803,521,2.485,550,4.449,554,4.449,640,3.293,641,4.906,994,5.517,1047,4.084,1074,3.627,1226,5.517,1260,3.627,1261,6.446,1262,6.446]],["title/classes/UserRole.html",[43,0.158,1047,2.282]],["body/classes/UserRole.html",[3,0.25,4,0.218,7,0.218,14,0.459,25,0.654,26,0.02,27,0.971,42,0.25,43,0.218,70,2.042,97,0.014,98,0.017,99,0.014,103,1.091,104,1.289,179,1.889,202,2.074,203,2.074,280,5.331,511,4.918,526,2.917,621,5.423,1047,3.849,1263,4.257,1264,4.974,1265,4.974]],["title/injectables/UserService.html",[148,0.945,340,2.282]],["body/injectables/UserService.html",[3,0.242,4,0.211,7,0.211,14,0.443,15,1.263,25,0.641,26,0.021,27,0.951,34,0.966,38,0.501,41,0.556,42,0.242,43,0.211,54,0.951,92,1.5,97,0.013,98,0.016,99,0.013,104,1.371,111,1.333,112,1.009,146,1.33,148,1.562,149,3.61,150,2.17,165,1.477,276,2.17,340,3.77,482,3.319,500,3.319,501,3.047,1266,4.116,1267,5.95,1268,4.809,1269,5.95,1270,4.809,1271,4.809]],["title/coverage.html",[1272,4.218]],["body/coverage.html",[0,0.553,1,0.788,7,0.132,8,2.568,25,0.323,26,0.021,43,0.26,44,1.277,51,0.788,56,0.788,58,0.788,61,0.788,64,0.788,67,0.788,69,0.788,72,0.788,74,0.788,77,0.788,79,0.788,81,0.788,83,0.788,85,0.788,87,0.788,89,0.788,91,0.83,92,0.637,94,0.747,97,0.008,98,0.012,99,0.008,100,2.568,148,1.739,149,1.532,151,2.568,169,1.638,188,4.687,205,3.53,235,2.568,249,1.638,255,1.638,335,1.438,336,1.759,337,1.638,338,1.759,339,1.277,340,1.901,370,2.07,381,3.298,413,2.568,435,2.568,438,2.07,439,2.07,441,2.568,468,2.283,477,2.568,510,2.568,519,2.515,520,1.901,522,2.568,525,2.07,527,2.568,532,2.568,548,1.638,549,2.568,557,2.568,558,3.709,619,1.532,620,2.568,632,1.901,633,2.568,637,2.07,638,2.568,642,2.283,643,2.283,645,2.283,647,2.283,649,2.283,660,2.568,692,2.568,788,2.568,795,2.568,806,2.568,807,3.298,828,1.759,829,1.759,830,1.759,868,2.568,887,2.568,909,3.298,918,2.745,948,3.298,1005,2.283,1006,2.568,1047,1.901,1085,2.568,1131,2.568,1142,2.568,1146,2.568,1202,2.568,1207,2.568,1223,2.568,1260,2.568,1263,2.568,1266,2.568,1272,2.568,1273,2.568,1274,3,1275,3,1276,7.533,1277,5.909,1278,4.333,1279,3,1280,6.883,1281,3,1282,6.158,1283,3,1284,3,1285,4.333,1286,6.158,1287,3,1288,3,1289,4.333,1290,5.572,1291,4.333,1292,2.568,1293,2.568,1294,2.568,1295,2.568,1296,2.568,1297,2.568,1298,2.568,1299,2.568,1300,2.568,1301,3,1302,3,1303,3,1304,3,1305,3,1306,2.568,1307,2.568,1308,2.568,1309,3,1310,3]],["title/dependencies.html",[324,2.078,1311,3.001]],["body/dependencies.html",[11,1.724,26,0.021,41,0.515,97,0.012,98,0.015,99,0.012,123,3.95,124,2.818,265,3.094,266,2.894,268,1.602,270,3.384,271,3.384,274,2.007,324,2.132,326,2.272,352,2.556,353,2.272,355,4.302,356,3.069,357,3.91,373,2.272,376,3.806,377,3.806,467,2.429,597,3.069,918,3.589,1312,4.447,1313,3.806,1314,7.129,1315,4.447,1316,4.447,1317,4.447,1318,4.447,1319,4.447,1320,4.447,1321,4.447,1322,4.447,1323,3.806,1324,4.447,1325,4.447,1326,4.447,1327,4.447,1328,4.447,1329,4.447,1330,4.447,1331,4.447,1332,3.806,1333,4.447,1334,4.447,1335,4.447,1336,4.447,1337,4.447,1338,4.447,1339,4.447,1340,4.447,1341,4.447,1342,4.447,1343,4.447,1344,4.447,1345,4.447,1346,4.447]],["title/miscellaneous/functions.html",[1347,2.071,1348,3.71]],["body/miscellaneous/functions.html",[14,0.415,25,0.71,26,0.02,34,1.325,54,1.111,97,0.012,98,0.016,99,0.012,111,1.557,112,1.179,455,3.16,606,5.177,642,4.344,643,4.344,645,4.344,647,4.344,649,4.344,828,3.347,829,2.639,830,3.347,1239,3.852,1292,3.852,1293,3.852,1294,4.885,1295,3.852,1296,4.885,1297,3.852,1298,4.885,1299,3.852,1300,4.885,1306,4.885,1347,3.106,1348,3.852,1349,4.5,1350,4.5,1351,4.5,1352,4.5,1353,4.5,1354,4.5,1355,4.5,1356,6.592,1357,4.5,1358,4.5,1359,4.5,1360,4.5,1361,4.5]],["title/index.html",[14,0.277,1362,3.001,1363,3.001]],["body/index.html",[0,0.317,4,0.18,11,1.132,26,0.017,40,3.502,65,1.875,70,1.192,75,1.192,90,1.132,92,0.868,97,0.011,98,0.015,99,0.011,123,2.592,124,2.592,224,2.823,280,3.113,281,3.502,311,3.704,321,2.313,352,1.846,353,2.09,355,4.389,356,2.823,357,2.823,471,2.592,474,2.592,475,2.573,548,2.234,597,3.704,609,2.399,613,3.502,616,4.594,693,3.502,732,3.502,861,2.592,1200,4.085,1273,3.502,1313,3.502,1323,3.502,1332,3.502,1364,5.99,1365,6.359,1366,6.777,1367,4.091,1368,4.091,1369,4.091,1370,6.359,1371,5.367,1372,4.091,1373,4.091,1374,5.367,1375,5.367,1376,4.091,1377,4.091,1378,4.091,1379,4.091,1380,4.091,1381,5.367,1382,4.091,1383,3.502,1384,3.113,1385,5.367,1386,4.091,1387,4.091,1388,4.091,1389,4.091,1390,4.091,1391,4.091,1392,5.99,1393,5.367,1394,5.99,1395,5.367,1396,4.091,1397,4.091,1398,4.594,1399,4.091,1400,4.091,1401,4.091,1402,4.594,1403,4.594,1404,4.091,1405,4.091,1406,4.091,1407,5.367,1408,4.091,1409,4.091,1410,4.091,1411,3.502,1412,4.091,1413,4.091,1414,4.091,1415,4.091,1416,4.091,1417,4.091,1418,4.091,1419,4.091]],["title/modules.html",[323,2.223]],["body/modules.html",[26,0.017,97,0.015,98,0.017,99,0.015,266,3.705,322,3.706,323,2.423,334,3.402,684,3.706,778,3.706,934,3.706,997,3.706,1420,7.253,1421,7.253,1422,7.253]],["title/overview.html",[1384,3.75]],["body/overview.html",[1,1.435,2,0.996,26,0.02,48,0.766,51,0.897,56,1.435,58,1.731,61,1.435,64,1.435,67,1.435,69,1.435,72,1.435,74,1.435,77,1.435,79,1.731,81,1.435,83,1.435,85,1.435,87,1.435,89,1.435,91,1.512,94,1.361,97,0.009,98,0.013,99,0.009,150,1.542,169,2.984,249,2.984,258,1.542,321,1.167,322,5.099,323,1.542,324,1.639,325,1.866,326,1.746,327,1.866,328,1.866,329,2.925,330,2.925,331,2.925,332,2.925,333,2.925,334,4.426,335,2.62,336,3.205,337,3.226,338,3.205,339,2.325,340,3.462,341,2.596,342,1.866,343,1.639,438,2.359,458,2.925,459,2.925,521,2.004,526,2.004,684,4.64,685,2.925,686,2.925,778,4.772,779,2.925,780,2.925,934,4.822,935,2.925,936,2.925,937,2.925,997,4.64,998,2.925,999,2.925,1200,3.617,1384,2.601,1398,2.925,1402,4.068,1403,2.925,1411,2.925,1423,3.418]],["title/routes.html",[258,2.223]],["body/routes.html",[26,0.018,97,0.016,98,0.018,99,0.016,258,2.649]],["title/miscellaneous/variables.html",[1347,2.071,1424,3.71]],["body/miscellaneous/variables.html",[14,0.472,25,0.743,26,0.02,97,0.014,98,0.017,99,0.014,147,3.004,202,2.111,203,2.111,205,3.245,208,4.268,299,3.245,381,5.25,430,3.004,909,3.898,918,4.474,948,3.898,966,4.384,967,4.384,1307,4.384,1308,4.384,1347,3.535,1383,5.293,1424,4.384,1425,5.122,1426,5.122,1427,5.122,1428,5.122]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["0.12.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1200,"title":{},"body":{"directives/StatusDirective.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":895,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["1.12.1",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["1.19.3",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1415,"title":{},"body":{"index.html":{}}}],["100",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["1024",{"_index":590,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["10px",{"_index":1186,"title":{},"body":{"directives/StatusDirective.html":{}}}],["11",{"_index":1416,"title":{},"body":{"index.html":{}}}],["15px",{"_index":1190,"title":{},"body":{"directives/StatusDirective.html":{}}}],["160x160.jpg",{"_index":582,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["17",{"_index":1423,"title":{},"body":{"overview.html":{}}}],["18.1.2",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["19.1.2",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["19.1.4",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1393,"title":{},"body":{"index.html":{}}}],["2.1.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":797,"title":{},"body":{"components/FooterComponent.html":{}}}],["2.5.4",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["2014",{"_index":800,"title":{},"body":{"components/FooterComponent.html":{}}}],["2016",{"_index":801,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":1395,"title":{},"body":{"index.html":{}}}],["3.3.1",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1398,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.0.1",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1402,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5/5",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":737,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["576",{"_index":592,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["5px",{"_index":1184,"title":{},"body":{"directives/StatusDirective.html":{}}}],["6",{"_index":1403,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.1.1",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1394,"title":{},"body":{"index.html":{}}}],["7.1.4",{"_index":1313,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["7.2.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1407,"title":{},"body":{"index.html":{}}}],["9",{"_index":1411,"title":{},"body":{"index.html":{},"overview.html":{}}}],["9.1.1",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["9._]+@[a",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9/10",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["9]+\\.[a",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9a",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["_baseappurl",{"_index":168,"title":{},"body":{"injectables/Api.html":{}}}],["access",{"_index":415,"title":{},"body":{"injectables/AppService.html":{}}}],["accessed",{"_index":428,"title":{},"body":{"injectables/AppService.html":{}}}],["accessors",{"_index":569,"title":{},"body":{"components/CompanyProfileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["account",{"_index":867,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["action",{"_index":732,"title":{},"body":{"components/EmployeeListComponent.html":{},"index.html":{}}}],["actioncomponent",{"_index":1,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionparentcomponent",{"_index":56,"title":{"components/ActionParentComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["activatedroutesnapshot",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":682,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actual_component",{"_index":96,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["address",{"_index":550,"title":{},"body":{"interfaces/Company.html":{},"classes/CustomValidators.html":{},"components/EmployeeListComponent.html":{},"interfaces/User.html":{}}}],["address.validator",{"_index":654,"title":{},"body":{"classes/CustomValidators.html":{}}}],["addressvalidator",{"_index":643,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addressvalidator(control",{"_index":1355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["admin",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"classes/UserRole.html":{},"index.html":{}}}],["admin@gmail.com",{"_index":1234,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["adminlte",{"_index":861,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["aftercontentinit",{"_index":1134,"title":{},"body":{"components/SidebarComponent.html":{}}}],["afterviewchecked",{"_index":917,"title":{},"body":{"components/LayoutComponent.html":{}}}],["afterviewinit",{"_index":916,"title":{},"body":{"components/LayoutComponent.html":{},"components/SidebarComponent.html":{}}}],["ag",{"_index":11,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{},"index.html":{}}}],["aggrid",{"_index":695,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["aggridmodule",{"_index":784,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["aggridmodule.withcomponents",{"_index":787,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["aggridng2",{"_index":723,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["aginit",{"_index":107,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["aginit(params",{"_index":109,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["agree",{"_index":1082,"title":{},"body":{"components/RegisterComponent.html":{}}}],["agreeterms",{"_index":1013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ajax",{"_index":1418,"title":{},"body":{"index.html":{}}}],["alert(\"delete",{"_index":774,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["alert(\"edit",{"_index":773,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["alert(\"view",{"_index":771,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["alert('double",{"_index":768,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["alert(`selected",{"_index":766,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["allow",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["allowed",{"_index":1194,"title":{},"body":{"directives/StatusDirective.html":{}}}],["almsaeed",{"_index":802,"title":{},"body":{"components/FooterComponent.html":{}}}],["already",{"_index":865,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["alt",{"_index":884,"title":{},"body":{"components/HeaderComponent.html":{}}}],["alternatecontactnumber",{"_index":551,"title":{},"body":{"interfaces/Company.html":{}}}],["angular",{"_index":124,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"directives/StatusDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"injectables/Api.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{}}}],["angular/compiler",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core/src/render3/jit/module",{"_index":744,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["angular/forms",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/pwa",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["aot",{"_index":1412,"title":{},"body":{"index.html":{}}}],["api",{"_index":149,"title":{"injectables/Api.html":{}},"body":{"injectables/Api.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["apibaseurl",{"_index":512,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["apis",{"_index":173,"title":{},"body":{"injectables/Api.html":{}}}],["apiurl",{"_index":157,"title":{},"body":{"injectables/Api.html":{}}}],["app",{"_index":59,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["app.component",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["app.service",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appisstable",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":210,"title":{},"body":{"injectables/Api.html":{}}}],["applicationref",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":322,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appref",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["approved",{"_index":675,"title":{},"body":{"components/DashboardComponent.html":{},"directives/StatusDirective.html":{}}}],["approvedclicked",{"_index":663,"title":{},"body":{"components/DashboardComponent.html":{}}}],["appservice",{"_index":249,"title":{"injectables/AppService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":1401,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":1379,"title":{},"body":{"index.html":{}}}],["assets/dist/js/app.min.js",{"_index":932,"title":{},"body":{"components/LayoutComponent.html":{}}}],["auth",{"_index":62,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{}}}],["auth.component",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module#authmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["authcomponent",{"_index":61,"title":{"components/AuthComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":439,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":334,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":219,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{}}}],["authorization",{"_index":1219,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["authservice",{"_index":335,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{}}}],["backend",{"_index":1385,"title":{},"body":{"index.html":{}}}],["background",{"_index":1180,"title":{},"body":{"directives/StatusDirective.html":{}}}],["base",{"_index":174,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{}}}],["base.url.provider",{"_index":218,"title":{},"body":{"injectables/Api.html":{}}}],["base64",{"_index":905,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["base64url",{"_index":903,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["base64url.replace",{"_index":906,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["baseurlprovider",{"_index":169,"title":{"injectables/BaseUrlProvider.html":{}},"body":{"injectables/Api.html":{},"modules/AppModule.html":{},"injectables/BaseUrlProvider.html":{},"components/HeaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baseurlprovider.profilepicturebaseurl",{"_index":882,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bearer",{"_index":1220,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["before",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["better",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{}}}],["blockuihttpmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["blockuihttpmodule.forroot",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["blockuimodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["blockuimodule.forroot",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["blue",{"_index":923,"title":{},"body":{"components/LayoutComponent.html":{}}}],["body",{"_index":191,"title":{},"body":{"injectables/Api.html":{}}}],["boolean",{"_index":120,"title":{},"body":{"components/ActionParentComponent.html":{},"guards/AuthGuard.html":{},"classes/CommonResponse.html":{},"components/DashboardComponent.html":{},"directives/StatusDirective.html":{},"interfaces/User.html":{}}}],["boot(java",{"_index":1389,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":1188,"title":{},"body":{"directives/StatusDirective.html":{}}}],["both",{"_index":125,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["browse",{"_index":1422,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1366,"title":{},"body":{"index.html":{}}}],["call",{"_index":172,"title":{},"body":{"injectables/Api.html":{}}}],["calls",{"_index":216,"title":{},"body":{"injectables/Api.html":{}}}],["camera",{"_index":614,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["canactivate",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivatechild",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"modules/LayoutModule.html":{}}}],["canactivatechild(next",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capture",{"_index":613,"title":{},"body":{"components/CompanyProfileComponent.html":{},"index.html":{}}}],["captured",{"_index":617,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["cell",{"_index":20,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["cell'},{'name",{"_index":57,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["cellrenderer",{"_index":729,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["cellrendererframework",{"_index":733,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["change",{"_index":1152,"title":{},"body":{"directives/StatusDirective.html":{}}}],["characters",{"_index":1077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["child",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["children",{"_index":944,"title":{},"body":{"modules/LayoutModule.html":{}}}],["cities",{"_index":1008,"title":{},"body":{"components/RegisterComponent.html":{}}}],["city",{"_index":520,"title":{"interfaces/City.html":{}},"body":{"interfaces/City.html":{},"interfaces/Company.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["city.cityname",{"_index":1081,"title":{},"body":{"components/RegisterComponent.html":{}}}],["city.model",{"_index":556,"title":{},"body":{"interfaces/Company.html":{}}}],["cityid",{"_index":523,"title":{},"body":{"interfaces/City.html":{}}}],["class",{"_index":43,"title":{"classes/CommonResponse.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"classes/TokenInterceptor.html":{},"classes/UserRole.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":526,"title":{},"body":{"classes/CommonResponse.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"classes/TokenInterceptor.html":{},"classes/UserRole.html":{},"overview.html":{}}}],["clickable",{"_index":12,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["clickable'},{'name",{"_index":55,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["clicked",{"_index":769,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["close",{"_index":615,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["cluster_appmodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":685,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":686,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":779,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_declarations",{"_index":780,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_providers",{"_index":781,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["cluster_layoutmodule",{"_index":935,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_bootstrap",{"_index":937,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":936,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":998,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":999,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cmd",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["code",{"_index":1410,"title":{},"body":{"index.html":{}}}],["col",{"_index":139,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["collect",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":1168,"title":{},"body":{"directives/StatusDirective.html":{}}}],["columndefs",{"_index":696,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["command",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["common",{"_index":214,"title":{},"body":{"injectables/Api.html":{}}}],["commonmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["commonresponse",{"_index":525,"title":{"classes/CommonResponse.html":{}},"body":{"classes/CommonResponse.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["commonservice",{"_index":336,"title":{"injectables/CommonService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CommonService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["community",{"_index":1323,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["comp",{"_index":1205,"title":{},"body":{"components/TestingComponent.html":{}}}],["company",{"_index":548,"title":{"interfaces/Company.html":{}},"body":{"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"modules/ProfileModule.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{}}}],["company'},{'name",{"_index":66,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["company/company",{"_index":1004,"title":{},"body":{"modules/ProfileModule.html":{}}}],["companyname",{"_index":552,"title":{},"body":{"interfaces/Company.html":{}}}],["companyprofilecomponent",{"_index":64,"title":{"components/CompanyProfileComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["compodoc",{"_index":1408,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":63,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["componentparent",{"_index":746,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"overview.html":{}}}],["concat",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["concat(appisstable",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["conditions",{"_index":1084,"title":{},"body":{"components/RegisterComponent.html":{}}}],["configurable",{"_index":424,"title":{},"body":{"injectables/AppService.html":{}}}],["configuration",{"_index":420,"title":{},"body":{"injectables/AppService.html":{}}}],["confirm",{"_index":656,"title":{},"body":{"classes/CustomValidators.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["confirm(\"new",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["confirmpassword",{"_index":639,"title":{},"body":{"classes/CustomValidators.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["confirmpasswordvalidator",{"_index":645,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["confirmpasswordvalidator(control",{"_index":1357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.info('received",{"_index":602,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["console.log('auth",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('cmd",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('ctrl",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('updates",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(error",{"_index":857,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(key",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(response",{"_index":852,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(status",{"_index":680,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(this.appservice.geturl",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(user",{"_index":844,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["const",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/SidebarComponent.html":{}}}],["constants",{"_index":619,"title":{"classes/Constants.html":{}},"body":{"classes/Constants.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["constants.title_error",{"_index":756,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constants.title_success",{"_index":854,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/StatusDirective.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(document",{"_index":921,"title":{},"body":{"components/LayoutComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(api",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/UserService.html":{}}}],["constructor(appref",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(baseurlprovider",{"_index":873,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(document",{"_index":814,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(el",{"_index":1153,"title":{},"body":{"directives/StatusDirective.html":{}}}],["constructor(employeeservice",{"_index":706,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["constructor(http",{"_index":166,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{}}}],["constructor(private",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/HeaderComponent.html":{},"directives/StatusDirective.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":226,"title":{},"body":{"injectables/Api.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{}}}],["constructor(router",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(toastrservice",{"_index":1227,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["contactnumber",{"_index":553,"title":{},"body":{"interfaces/Company.html":{}}}],["content",{"_index":212,"title":{},"body":{"injectables/Api.html":{}}}],["context",{"_index":697,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["control",{"_index":606,"title":{},"body":{"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["controller",{"_index":185,"title":{},"body":{"injectables/Api.html":{}}}],["copy",{"_index":799,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":798,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["core/guards/auth.guard",{"_index":943,"title":{},"body":{"modules/LayoutModule.html":{}}}],["core/interceptors/token.interceptor",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["core/providers/api",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["core/providers/base.url.provider",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/auth.service",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/common.service",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/employee.service",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/jwt.utils",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/session.service",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/user.service",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["countries",{"_index":1009,"title":{},"body":{"components/RegisterComponent.html":{}}}],["country",{"_index":632,"title":{"interfaces/Country.html":{}},"body":{"interfaces/Country.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["country.countryname",{"_index":1079,"title":{},"body":{"components/RegisterComponent.html":{}}}],["country.model",{"_index":1145,"title":{},"body":{"interfaces/State.html":{}}}],["countrycode",{"_index":634,"title":{},"body":{"interfaces/Country.html":{}}}],["countryid",{"_index":543,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/Country.html":{}}}],["countryname",{"_index":635,"title":{},"body":{"interfaces/Country.html":{}}}],["coverage",{"_index":1272,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctrl",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["currency",{"_index":636,"title":{},"body":{"interfaces/Country.html":{}}}],["cursor",{"_index":1191,"title":{},"body":{"directives/StatusDirective.html":{}}}],["custom",{"_index":1404,"title":{},"body":{"index.html":{}}}],["customcellrendererfunc",{"_index":700,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["customcellrendererfunc(params",{"_index":709,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["customvalidators",{"_index":637,"title":{"classes/CustomValidators.html":{}},"body":{"classes/CustomValidators.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["customvalidators.confirmpassword",{"_index":1244,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["customvalidators.validatepasswordpolicy",{"_index":1243,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["dashboard",{"_index":609,"title":{},"body":{"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/LayoutModule.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["dashboard'},{'name",{"_index":68,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["dashboard.component",{"_index":689,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":661,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.module#dashboardmodule",{"_index":945,"title":{},"body":{"modules/LayoutModule.html":{}}}],["dashboardcomponent",{"_index":67,"title":{"components/DashboardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":684,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":141,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"classes/CommonResponse.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"components/SidebarComponent.html":{}}}],["data.push",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["data.push(parent.snapshot.data.title",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["data.url",{"_index":433,"title":{},"body":{"injectables/AppService.html":{}}}],["dateofbirth",{"_index":1261,"title":{},"body":{"interfaces/User.html":{}}}],["declarations",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["declare",{"_index":919,"title":{},"body":{"components/LayoutComponent.html":{},"components/LoginComponent.html":{}}}],["decode",{"_index":897,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["decodedtoken",{"_index":901,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["decodejwt",{"_index":888,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["decodejwt(token",{"_index":890,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["decoding",{"_index":900,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["decorators",{"_index":724,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["default",{"_index":202,"title":{},"body":{"injectables/Api.html":{},"injectables/BaseUrlProvider.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":161,"title":{},"body":{"injectables/Api.html":{}}}],["delete(endpoint",{"_index":178,"title":{},"body":{"injectables/Api.html":{}}}],["dependancies",{"_index":1376,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":324,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":152,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/JWTUtils.html":{}}}],["dev",{"_index":1377,"title":{},"body":{"index.html":{}}}],["developed",{"_index":1387,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1140,"title":{},"body":{"components/SidebarComponent.html":{}}}],["directive",{"_index":51,"title":{"directives/StatusDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":93,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["directory",{"_index":1371,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":662,"title":{},"body":{"components/DashboardComponent.html":{},"directives/StatusDirective.html":{},"components/UpdatePasswordComponent.html":{}}}],["dist",{"_index":1332,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["document",{"_index":815,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["document).ready",{"_index":1135,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document.createelement('script",{"_index":928,"title":{},"body":{"components/LayoutComponent.html":{}}}],["document.getelementsbytagname('head')[0].appendchild(script",{"_index":933,"title":{},"body":{"components/LayoutComponent.html":{}}}],["documentation",{"_index":1273,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["done",{"_index":679,"title":{},"body":{"components/DashboardComponent.html":{},"directives/StatusDirective.html":{}}}],["doneclicked",{"_index":664,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":1159,"title":{},"body":{"directives/StatusDirective.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["elementref",{"_index":1154,"title":{},"body":{"directives/StatusDirective.html":{}}}],["email",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{}}}],["email_key",{"_index":1086,"title":{},"body":{"injectables/SessionService.html":{}}}],["emailid",{"_index":864,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["employee",{"_index":70,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"index.html":{}}}],["employee.list.component",{"_index":785,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.list.component.html",{"_index":694,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["employeelistcomponent",{"_index":69,"title":{"components/EmployeeListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["employeemodule",{"_index":778,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employees",{"_index":775,"title":{},"body":{"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"components/SidebarComponent.html":{}}}],["employees/employees.module#employeemodule",{"_index":946,"title":{},"body":{"modules/LayoutModule.html":{}}}],["employeeservice",{"_index":337,"title":{"injectables/EmployeeService.html":{}},"body":{"modules/AppModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"coverage.html":{},"overview.html":{}}}],["enabled",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["encode",{"_index":896,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["endpoint",{"_index":184,"title":{},"body":{"injectables/Api.html":{}}}],["enter",{"_index":848,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["entrycomponents",{"_index":783,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["environment",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":577,"title":{},"body":{"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["errors",{"_index":560,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["event",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["eventemitter",{"_index":29,"title":{},"body":{"components/ActionComponent.html":{}}}],["everysixhours",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["everysixhoursonceappisstable",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["everysixhoursonceappisstable$.subscribe",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":133,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"injectables/AppService.html":{},"injectables/JWTUtils.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["f",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":147,"title":{},"body":{"components/ActionParentComponent.html":{},"guards/AuthGuard.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"directives/StatusDirective.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":816,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["features",{"_index":1391,"title":{},"body":{"index.html":{}}}],["field",{"_index":728,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["fields",{"_index":1072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fill",{"_index":1071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["first",{"_index":158,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{}}}],["flag",{"_index":1382,"title":{},"body":{"index.html":{}}}],["folded",{"_index":127,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["folder",{"_index":1400,"title":{},"body":{"index.html":{}}}],["footer",{"_index":683,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":73,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["footer.component.html",{"_index":796,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":72,"title":{"components/FooterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":75,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"index.html":{}}}],["forgotpassword",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":74,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordgroup",{"_index":810,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordgroup.invalid",{"_index":845,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordgroup.value",{"_index":843,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["form",{"_index":831,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["form.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formbuilder",{"_index":817,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":826,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["formcontrol(false",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":1239,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["full",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"classes/CustomValidators.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["fuller",{"_index":132,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["fullname",{"_index":640,"title":{},"body":{"classes/CustomValidators.html":{},"components/EmployeeListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{}}}],["fullname_key",{"_index":1087,"title":{},"body":{"injectables/SessionService.html":{}}}],["fullnamevalidator",{"_index":647,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fullnamevalidator(control",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":188,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["functions",{"_index":1348,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["generic",{"_index":153,"title":{},"body":{"injectables/Api.html":{}}}],["get(endpoint",{"_index":186,"title":{},"body":{"injectables/Api.html":{}}}],["getagreeterms",{"_index":1040,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getcity",{"_index":1035,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getcitylist",{"_index":533,"title":{},"body":{"injectables/CommonService.html":{},"components/RegisterComponent.html":{}}}],["getcitylist(state",{"_index":1015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getcitylist(stateid",{"_index":537,"title":{},"body":{"injectables/CommonService.html":{}}}],["getcolorcode",{"_index":1148,"title":{},"body":{"directives/StatusDirective.html":{}}}],["getcolorcode(status",{"_index":1164,"title":{},"body":{"directives/StatusDirective.html":{}}}],["getconfirmpassword",{"_index":1038,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["getcountry",{"_index":1031,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getcountrylist",{"_index":534,"title":{},"body":{"injectables/CommonService.html":{},"components/RegisterComponent.html":{}}}],["getemail",{"_index":824,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{}}}],["getemployeelist",{"_index":701,"title":{},"body":{"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{}}}],["getfullname",{"_index":1028,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/UpdatePasswordComponent.html":{}}}],["getjson",{"_index":416,"title":{},"body":{"injectables/AppService.html":{}}}],["getnewpassword",{"_index":1237,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["getpassword",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["getprofilepic",{"_index":1091,"title":{},"body":{"injectables/SessionService.html":{}}}],["getrememberme",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["getselectedrows",{"_index":702,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["getstate",{"_index":1033,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getstatelist",{"_index":535,"title":{},"body":{"injectables/CommonService.html":{},"components/RegisterComponent.html":{}}}],["getstatelist(country",{"_index":1018,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getstatelist(countryid",{"_index":541,"title":{},"body":{"injectables/CommonService.html":{}}}],["getting",{"_index":1362,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["gettitle(state",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["gettoken",{"_index":1092,"title":{},"body":{"injectables/SessionService.html":{}}}],["gettriggerobservable",{"_index":595,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["geturl",{"_index":417,"title":{},"body":{"injectables/AppService.html":{}}}],["getuserdetail",{"_index":789,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getuserdetail(userid",{"_index":792,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["getuserid",{"_index":1093,"title":{},"body":{"injectables/SessionService.html":{}}}],["getuserprofile",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserprofile(userid",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["goto",{"_index":1369,"title":{},"body":{"index.html":{}}}],["gray",{"_index":1195,"title":{},"body":{"directives/StatusDirective.html":{}}}],["green",{"_index":1171,"title":{},"body":{"directives/StatusDirective.html":{}}}],["grid",{"_index":123,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{},"index.html":{}}}],["gridoptions",{"_index":698,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["guard",{"_index":438,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handleimage",{"_index":565,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["handleimage(webcamimage",{"_index":572,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["handleiniterror",{"_index":566,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["handleiniterror(error",{"_index":574,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["handler",{"_index":155,"title":{},"body":{"injectables/Api.html":{}}}],["hashing",{"_index":1413,"title":{},"body":{"index.html":{}}}],["having",{"_index":866,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["header",{"_index":869,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":78,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["header.component.html",{"_index":870,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":77,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":727,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["headers",{"_index":209,"title":{},"body":{"injectables/Api.html":{}}}],["height",{"_index":591,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["highlight",{"_index":1149,"title":{},"body":{"directives/StatusDirective.html":{}}}],["highlight(status",{"_index":1166,"title":{},"body":{"directives/StatusDirective.html":{}}}],["hit",{"_index":1372,"title":{},"body":{"index.html":{}}}],["hold",{"_index":430,"title":{},"body":{"injectables/AppService.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":608,"title":{},"body":{"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{}}}],["hostlistener",{"_index":1173,"title":{},"body":{"directives/StatusDirective.html":{}}}],["hostlistener('change",{"_index":1175,"title":{},"body":{"directives/StatusDirective.html":{}}}],["hostlisteners",{"_index":1151,"title":{},"body":{"directives/StatusDirective.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["httclient",{"_index":421,"title":{},"body":{"injectables/AppService.html":{}}}],["http",{"_index":159,"title":{},"body":{"injectables/Api.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/LayoutModule.html":{}}}],["http://localhost:4200/assets/api",{"_index":514,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["http://localhost:4200/assets/dist/img",{"_index":516,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["http://localhost:9000/api/v1",{"_index":518,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["http_interceptors",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":167,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"components/EmployeeListComponent.html":{}}}],["httpclientmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LayoutModule.html":{}}}],["httperrorresponse",{"_index":833,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["httpevent",{"_index":1216,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["httphandler",{"_index":1213,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["httpheaders",{"_index":211,"title":{},"body":{"injectables/Api.html":{}}}],["httpinterceptor",{"_index":1208,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["httpoptions",{"_index":160,"title":{},"body":{"injectables/Api.html":{}}}],["httprequest",{"_index":1212,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["https://github.com/pravin02/springbootrestapp",{"_index":1390,"title":{},"body":{"index.html":{}}}],["icellrendererangularcomp",{"_index":102,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["id",{"_index":731,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ideal",{"_index":589,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["identifier",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["illustrates",{"_index":131,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["image",{"_index":554,"title":{},"body":{"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"interfaces/User.html":{}}}],["image:'assets/dist/img/user2",{"_index":581,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["implements",{"_index":101,"title":{},"body":{"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":436,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["inject(document",{"_index":834,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["injectable",{"_index":148,"title":{"injectables/Api.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/JWTUtils.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/JWTUtils.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":150,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/JWTUtils.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":39,"title":{},"body":{"components/ActionComponent.html":{},"directives/StatusDirective.html":{}}}],["inputs",{"_index":19,"title":{},"body":{"components/ActionComponent.html":{},"directives/StatusDirective.html":{}}}],["insert",{"_index":199,"title":{},"body":{"injectables/Api.html":{}}}],["install",{"_index":1364,"title":{},"body":{"index.html":{}}}],["instance",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["integration",{"_index":1392,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1209,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["intercept(request",{"_index":1211,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["interface",{"_index":519,"title":{"interfaces/City.html":{},"interfaces/Company.html":{},"interfaces/Country.html":{},"interfaces/State.html":{},"interfaces/User.html":{}},"body":{"interfaces/City.html":{},"interfaces/Company.html":{},"interfaces/Country.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":521,"title":{},"body":{"interfaces/City.html":{},"interfaces/Company.html":{},"interfaces/Country.html":{},"interfaces/State.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["interval(6",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["isstable",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["item.status",{"_index":1198,"title":{},"body":{"directives/StatusDirective.html":{}}}],["jquery",{"_index":918,"title":{},"body":{"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jquery('#loginmodal').modal('hide",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["jquery:any",{"_index":920,"title":{},"body":{"components/LayoutComponent.html":{}}}],["js",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":425,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(window.atob(base64",{"_index":908,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["json.stringify(cell.data",{"_index":772,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["jwt",{"_index":899,"title":{},"body":{"injectables/JWTUtils.html":{},"components/LoginComponent.html":{}}}],["jwt_token_key",{"_index":1088,"title":{},"body":{"injectables/SessionService.html":{}}}],["jwtutils",{"_index":338,"title":{"injectables/JWTUtils.html":{}},"body":{"modules/AppModule.html":{},"injectables/JWTUtils.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["keyboard",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["keyboardshortcutsmodule",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["keyboardshortcutsservice",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["latest",{"_index":598,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["layout",{"_index":910,"title":{},"body":{"components/LayoutComponent.html":{},"modules/LayoutModule.html":{}}}],["layout'},{'name",{"_index":80,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["layout.component",{"_index":942,"title":{},"body":{"modules/LayoutModule.html":{}}}],["layout.component.html",{"_index":911,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/layout.module#layoutmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutcomponent",{"_index":79,"title":{"components/LayoutComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutmodule",{"_index":934,"title":{"modules/LayoutModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["lazy",{"_index":1396,"title":{},"body":{"index.html":{}}}],["left",{"_index":1185,"title":{},"body":{"directives/StatusDirective.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"overview.html":{}}}],["level",{"_index":414,"title":{},"body":{"injectables/AppService.html":{}}}],["list",{"_index":693,"title":{},"body":{"components/EmployeeListComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":71,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["literal",{"_index":1356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["load",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["loadchildren",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["loader",{"_index":1419,"title":{},"body":{"index.html":{}}}],["loading",{"_index":1397,"title":{},"body":{"index.html":{}}}],["loadscript",{"_index":912,"title":{},"body":{"components/LayoutComponent.html":{}}}],["localstorage.getitem(this.email_key",{"_index":1129,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(this.fullname_key",{"_index":1123,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(this.jwt_token_key",{"_index":1127,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(this.profile_pic_key",{"_index":1125,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.getitem(this.userid_key",{"_index":1121,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(this.email_key",{"_index":1130,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(this.fullname_key",{"_index":1124,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(this.jwt_token_key",{"_index":1128,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(this.profile_pic_key",{"_index":1126,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.setitem(this.userid_key",{"_index":1122,"title":{},"body":{"injectables/SessionService.html":{}}}],["log",{"_index":1141,"title":{},"body":{"components/SidebarComponent.html":{}}}],["login",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":82,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["login(user",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.json",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["login/login.component",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":81,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginformgroup",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformgroup.invalid",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginformgroup.value",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":872,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SessionService.html":{}}}],["lte",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["mandatory",{"_index":1073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":98,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mediatrackconstraints",{"_index":587,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["membership",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["message",{"_index":528,"title":{},"body":{"classes/CommonResponse.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["method",{"_index":181,"title":{},"body":{"injectables/Api.html":{}}}],["methods",{"_index":15,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{}}}],["mini",{"_index":925,"title":{},"body":{"components/LayoutComponent.html":{}}}],["miscellaneous",{"_index":1347,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1259,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["mobile",{"_index":652,"title":{},"body":{"classes/CustomValidators.html":{},"components/EmployeeListComponent.html":{}}}],["mobilenumber",{"_index":641,"title":{},"body":{"classes/CustomValidators.html":{},"components/EmployeeListComponent.html":{},"interfaces/User.html":{}}}],["mobilenumbervalidator",{"_index":649,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mobilenumbervalidator(control",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modal",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["module",{"_index":321,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":323,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["multi",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/City.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name.validator",{"_index":655,"title":{},"body":{"classes/CustomValidators.html":{}}}],["name.validator.ts",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["navigation",{"_index":885,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigationend",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":44,"title":{},"body":{"components/ActionComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["newpassword",{"_index":1226,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{}}}],["next",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"classes/TokenInterceptor.html":{}}}],["next.handle(request",{"_index":1222,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["ng",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["ngonchanges",{"_index":1176,"title":{},"body":{"directives/StatusDirective.html":{}}}],["ngondestroy",{"_index":812,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["ngoninit",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["ngx",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{},"index.html":{}}}],["no_errors_schema",{"_index":688,"title":{},"body":{"modules/DashboardModule.html":{}}}],["node.data",{"_index":761,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["node.make",{"_index":764,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["node.model).join",{"_index":765,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["nodemon",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["nodes",{"_index":767,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["none",{"_index":1414,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1373,"title":{},"body":{"index.html":{}}}],["null",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompanyProfileComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/JWTUtils.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/City.html":{},"injectables/CommonService.html":{},"interfaces/Country.html":{},"components/EmployeeListComponent.html":{},"interfaces/State.html":{}}}],["number.validator",{"_index":653,"title":{},"body":{"classes/CustomValidators.html":{}}}],["number.validator.ts",{"_index":1298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["o",{"_index":1375,"title":{},"body":{"index.html":{}}}],["obj",{"_index":1196,"title":{},"body":{"directives/StatusDirective.html":{}}}],["obj.length",{"_index":1199,"title":{},"body":{"directives/StatusDirective.html":{}}}],["obj[0].color",{"_index":1201,"title":{},"body":{"directives/StatusDirective.html":{}}}],["object",{"_index":208,"title":{},"body":{"injectables/Api.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":426,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"components/CompanyProfileComponent.html":{},"classes/TokenInterceptor.html":{}}}],["oncellclicked",{"_index":703,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["oncellclicked(row",{"_index":714,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["oncelldoubleclicked",{"_index":704,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["oncelldoubleclicked(row",{"_index":716,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["ondelete",{"_index":16,"title":{},"body":{"components/ActionComponent.html":{}}}],["ondeleteclicked",{"_index":22,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["ondeleteclicked(cell",{"_index":113,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["ondestroy",{"_index":808,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["one",{"_index":128,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["onedit",{"_index":17,"title":{},"body":{"components/ActionComponent.html":{}}}],["oneditclicked",{"_index":23,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["oneditclicked(cell",{"_index":115,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["ongridready",{"_index":705,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["ongridready(data",{"_index":720,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["oninit",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["onloginclicked",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["onloginclicked(loginformgroup",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["onrecoverpasswordclicked",{"_index":813,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["onrecoverpasswordclicked(forgotpasswordgroup",{"_index":821,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["onregister",{"_index":1012,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onregister(registerformgroup",{"_index":1022,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsameurlnavigation",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["onsubmitformgroup",{"_index":828,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsubmitformgroup(forgotpasswordgroup",{"_index":846,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["onsubmitformgroup(formgroup",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onsubmitformgroup(loginformgroup",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmitformgroup(registerformgroup",{"_index":1070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsubmitformgroup(updatepasswordformgroup",{"_index":1250,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["onupdatepasswordclicked",{"_index":1225,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["onupdatepasswordclicked(updatepasswordformgroup",{"_index":1231,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["onview",{"_index":18,"title":{},"body":{"components/ActionComponent.html":{}}}],["onviewclicked",{"_index":24,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["onviewclicked(cell",{"_index":117,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["open",{"_index":1367,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":1399,"title":{},"body":{"index.html":{}}}],["optional",{"_index":112,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/City.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"interfaces/Country.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":215,"title":{},"body":{"injectables/Api.html":{}}}],["orange",{"_index":1169,"title":{},"body":{"directives/StatusDirective.html":{}}}],["out",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"components/HeaderComponent.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["output",{"_index":40,"title":{},"body":{"components/ActionComponent.html":{},"index.html":{}}}],["outputs",{"_index":21,"title":{},"body":{"components/ActionComponent.html":{}}}],["overview",{"_index":1384,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":221,"title":{},"body":{"injectables/Api.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/SidebarComponent.html":{}}}],["package",{"_index":1311,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1183,"title":{},"body":{"directives/StatusDirective.html":{}}}],["page",{"_index":842,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":607,"title":{},"body":{"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{}}}],["param",{"_index":225,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/JWTUtils.html":{}}}],["parameters",{"_index":111,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":106,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/EmployeeListComponent.html":{}}}],["params.coldef.headername",{"_index":140,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["params.data",{"_index":142,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["params.value",{"_index":138,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["parent",{"_index":126,"title":{},"body":{"components/ActionParentComponent.html":{},"components/AppComponent.html":{}}}],["parent.snapshot.data",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["parent.snapshot.data.title",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["parsejwt",{"_index":889,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["parsejwt(token",{"_index":893,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["partially",{"_index":194,"title":{},"body":{"injectables/Api.html":{}}}],["password",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["password'},{'name",{"_index":76,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["password.component.html",{"_index":809,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts",{"_index":807,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":823,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":818,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1233,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1228,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:29",{"_index":1230,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:37",{"_index":825,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1235,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:41",{"_index":820,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1236,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:45",{"_index":822,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:48",{"_index":1238,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1232,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:70",{"_index":819,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1229,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.policy.validator",{"_index":659,"title":{},"body":{"classes/CustomValidators.html":{}}}],["password.policy.validator.ts",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["password.validator",{"_index":657,"title":{},"body":{"classes/CustomValidators.html":{}}}],["password.validator.ts",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["password/forgot",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/update",{"_index":1005,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["patch",{"_index":162,"title":{},"body":{"injectables/Api.html":{}}}],["patch(endpoint",{"_index":190,"title":{},"body":{"injectables/Api.html":{}}}],["path",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["pathmatch",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["patil",{"_index":222,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"components/SidebarComponent.html":{}}}],["payload",{"_index":195,"title":{},"body":{"injectables/Api.html":{}}}],["photo",{"_index":611,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["pic",{"_index":1405,"title":{},"body":{"index.html":{}}}],["pick",{"_index":618,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["please",{"_index":863,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["pointer",{"_index":1192,"title":{},"body":{"directives/StatusDirective.html":{}}}],["polling",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":163,"title":{},"body":{"injectables/Api.html":{}}}],["post(endpoint",{"_index":196,"title":{},"body":{"injectables/Api.html":{}}}],["pravin",{"_index":220,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"components/SidebarComponent.html":{}}}],["prefix",{"_index":176,"title":{},"body":{"injectables/Api.html":{}}}],["preventdefault",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":105,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"components/UpdatePasswordComponent.html":{}}}],["prod",{"_index":1381,"title":{},"body":{"index.html":{}}}],["production",{"_index":1383,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":65,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"index.html":{}}}],["profile.component",{"_index":1003,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.html",{"_index":559,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts",{"_index":558,"title":{},"body":{"components/CompanyProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:11",{"_index":583,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:12",{"_index":584,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:13",{"_index":580,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:15",{"_index":594,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":586,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":593,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":571,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":579,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":576,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":573,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:39",{"_index":596,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile.component.ts:43",{"_index":578,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["profile/profile.module#profilemodule",{"_index":947,"title":{},"body":{"modules/LayoutModule.html":{}}}],["profile_pic_key",{"_index":1089,"title":{},"body":{"injectables/SessionService.html":{}}}],["profilemodule",{"_index":997,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":1111,"title":{},"body":{"injectables/SessionService.html":{}}}],["profilepicture",{"_index":871,"title":{},"body":{"components/HeaderComponent.html":{}}}],["profilepicturebaseurl",{"_index":513,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["project",{"_index":1370,"title":{},"body":{"index.html":{}}}],["promise",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{}}}],["promise((resolve",{"_index":752,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["properties",{"_index":103,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{}}}],["provide",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":223,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{}}}],["providers",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["providers/api",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/EmployeeService.html":{},"injectables/UserService.html":{}}}],["public",{"_index":104,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{}}}],["put",{"_index":164,"title":{},"body":{"injectables/Api.html":{}}}],["put(endpoint",{"_index":200,"title":{},"body":{"injectables/Api.html":{}}}],["radius",{"_index":1189,"title":{},"body":{"directives/StatusDirective.html":{}}}],["reactiveformsmodule",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["read",{"_index":422,"title":{},"body":{"injectables/AppService.html":{}}}],["reading",{"_index":419,"title":{},"body":{"injectables/AppService.html":{}}}],["readonly",{"_index":511,"title":{},"body":{"injectables/BaseUrlProvider.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"classes/UserRole.html":{}}}],["record",{"_index":183,"title":{},"body":{"injectables/Api.html":{}}}],["recover",{"_index":862,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["red",{"_index":1170,"title":{},"body":{"directives/StatusDirective.html":{}}}],["redirectto",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["reference",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":108,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["register",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["register'},{'name",{"_index":84,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["register(user",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":1007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{}}}],["registercomponent",{"_index":83,"title":{"components/RegisterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerednumber",{"_index":555,"title":{},"body":{"interfaces/Company.html":{}}}],["registerformgroup",{"_index":1010,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformgroup.invalid",{"_index":1069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerformgroup.value",{"_index":1068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reject",{"_index":753,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["rejected",{"_index":678,"title":{},"body":{"components/DashboardComponent.html":{},"directives/StatusDirective.html":{}}}],["rejectedclicked",{"_index":665,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reload",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["remember",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["rememberme",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["remove",{"_index":182,"title":{},"body":{"injectables/Api.html":{}}}],["renderer",{"_index":1155,"title":{},"body":{"directives/StatusDirective.html":{}}}],["renderer2",{"_index":1156,"title":{},"body":{"directives/StatusDirective.html":{}}}],["replace('_",{"_index":907,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["request",{"_index":1215,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["request.clone",{"_index":1217,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["required",{"_index":193,"title":{},"body":{"injectables/Api.html":{}}}],["reserved",{"_index":805,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["resetcompiledcomponents",{"_index":743,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["resolve(response.data",{"_index":754,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["resources",{"_index":177,"title":{},"body":{"injectables/Api.html":{}}}],["response.data",{"_index":1063,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.status",{"_index":750,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["rest",{"_index":154,"title":{},"body":{"injectables/Api.html":{}}}],["result",{"_index":97,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":99,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/JWTUtils.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":34,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":1187,"title":{},"body":{"directives/StatusDirective.html":{}}}],["rights",{"_index":804,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":1262,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":224,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"index.html":{}}}],["root'},{'name",{"_index":60,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["router",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["router.events.subscribe(event",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["router.routerstate.root).join",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["routermodule.forchild(routes",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["routermodule.forroot(routes",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{},"routes.html":{}}}],["row",{"_index":137,"title":{},"body":{"components/ActionParentComponent.html":{},"components/EmployeeListComponent.html":{}}}],["row.data.make",{"_index":770,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["rowdata",{"_index":699,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["rowheight",{"_index":736,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["rows",{"_index":777,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["run",{"_index":1365,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"components/CompanyProfileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["schemas",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["screens",{"_index":1417,"title":{},"body":{"index.html":{}}}],["script",{"_index":927,"title":{},"body":{"components/LayoutComponent.html":{}}}],["script.src",{"_index":931,"title":{},"body":{"components/LayoutComponent.html":{}}}],["script.type",{"_index":929,"title":{},"body":{"components/LayoutComponent.html":{}}}],["securely",{"_index":198,"title":{},"body":{"injectables/Api.html":{}}}],["select",{"_index":1078,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selected",{"_index":776,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selecteddata",{"_index":759,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selecteddata.map(node",{"_index":763,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selecteddatastringpresentation",{"_index":762,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selectednodes",{"_index":757,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selectednodes.map(node",{"_index":760,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["selector:'app",{"_index":437,"title":{},"body":{"components/AuthComponent.html":{},"components/TestingComponent.html":{}}}],["serve",{"_index":1374,"title":{},"body":{"index.html":{}}}],["server",{"_index":1378,"title":{},"body":{"index.html":{}}}],["service",{"_index":171,"title":{},"body":{"injectables/Api.html":{}}}],["services",{"_index":429,"title":{},"body":{"injectables/AppService.html":{}}}],["services/session.service",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"classes/TokenInterceptor.html":{}}}],["serviceworkermodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["sessionservice",{"_index":339,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionservice.getfullname",{"_index":880,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sessionservice.getprofilepic",{"_index":883,"title":{},"body":{"components/HeaderComponent.html":{}}}],["set",{"_index":156,"title":{},"body":{"injectables/Api.html":{}}}],["setemail",{"_index":1094,"title":{},"body":{"injectables/SessionService.html":{}}}],["setemail(email",{"_index":1105,"title":{},"body":{"injectables/SessionService.html":{}}}],["setfullname",{"_index":1095,"title":{},"body":{"injectables/SessionService.html":{}}}],["setfullname(fullname",{"_index":1107,"title":{},"body":{"injectables/SessionService.html":{}}}],["setheaders",{"_index":1218,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["setprofilepic",{"_index":1096,"title":{},"body":{"injectables/SessionService.html":{}}}],["setprofilepic(profilepic",{"_index":1109,"title":{},"body":{"injectables/SessionService.html":{}}}],["settimeout",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle(title",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["settoken",{"_index":1097,"title":{},"body":{"injectables/SessionService.html":{}}}],["settoken(token",{"_index":1112,"title":{},"body":{"injectables/SessionService.html":{}}}],["setuserid",{"_index":1098,"title":{},"body":{"injectables/SessionService.html":{}}}],["setuserid(userid",{"_index":1114,"title":{},"body":{"injectables/SessionService.html":{}}}],["shared/footer/footer.component",{"_index":941,"title":{},"body":{"modules/LayoutModule.html":{}}}],["shared/header/header.component",{"_index":939,"title":{},"body":{"modules/LayoutModule.html":{}}}],["shared/sidebar/sidebar.component",{"_index":940,"title":{},"body":{"modules/LayoutModule.html":{}}}],["shift",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["shortcuts",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["showwebcam",{"_index":561,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["sidebar",{"_index":924,"title":{},"body":{"components/LayoutComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":86,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["sidebar.component.html",{"_index":1132,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":85,"title":{"components/SidebarComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":886,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["simple",{"_index":130,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["skin",{"_index":922,"title":{},"body":{"components/LayoutComponent.html":{}}}],["snapshot",{"_index":599,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["software",{"_index":1139,"title":{},"body":{"components/SidebarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spring",{"_index":1388,"title":{},"body":{"index.html":{}}}],["src/.../address.validator.ts",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../confirm",{"_index":1350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../full",{"_index":1351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../layout.component.ts",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.ts",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mobile",{"_index":1352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../on",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../valid",{"_index":1354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/app.service.ts",{"_index":413,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:16",{"_index":418,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:35",{"_index":423,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:44",{"_index":427,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/auth/auth.component.ts",{"_index":435,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.module.ts",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/forgot",{"_index":806,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/login/login.component.ts:27",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:29",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:48",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:52",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:55",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:58",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:95",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/register/register.component.ts",{"_index":1006,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/register/register.component.ts:111",{"_index":1016,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:125",{"_index":1023,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:157",{"_index":1020,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:26",{"_index":1025,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:27",{"_index":1027,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:29",{"_index":1024,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:30",{"_index":1026,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:31",{"_index":1014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:53",{"_index":1029,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:56",{"_index":1030,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:59",{"_index":1032,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:62",{"_index":1034,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:65",{"_index":1036,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:68",{"_index":1037,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:71",{"_index":1039,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:74",{"_index":1041,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:78",{"_index":1021,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:83",{"_index":1017,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:97",{"_index":1019,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/constants",{"_index":742,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["src/app/core/constants.ts",{"_index":620,"title":{},"body":{"classes/Constants.html":{},"coverage.html":{}}}],["src/app/core/constants.ts:3",{"_index":629,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/core/constants.ts:4",{"_index":627,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/core/constants.ts:5",{"_index":626,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/core/constants.ts:6",{"_index":631,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/core/directives/status.directive",{"_index":691,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/core/directives/status.directive.ts",{"_index":1146,"title":{},"body":{"directives/StatusDirective.html":{},"coverage.html":{}}}],["src/app/core/directives/status.directive.ts:11",{"_index":1162,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:13",{"_index":1160,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:15",{"_index":1172,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:19",{"_index":1158,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:26",{"_index":1163,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:30",{"_index":1167,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:47",{"_index":1165,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/directives/status.directive.ts:9",{"_index":1161,"title":{},"body":{"directives/StatusDirective.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:13",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:8",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interceptors/token.interceptor.ts",{"_index":1207,"title":{},"body":{"classes/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/token.interceptor.ts:6",{"_index":1210,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["src/app/core/interceptors/token.interceptor.ts:8",{"_index":1214,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["src/app/core/providers/api.ts",{"_index":151,"title":{},"body":{"injectables/Api.html":{},"coverage.html":{}}}],["src/app/core/providers/api.ts:16",{"_index":204,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:20",{"_index":213,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:27",{"_index":170,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:34",{"_index":207,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:44",{"_index":187,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:55",{"_index":197,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:65",{"_index":201,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:74",{"_index":180,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/api.ts:84",{"_index":192,"title":{},"body":{"injectables/Api.html":{}}}],["src/app/core/providers/base.url.provider",{"_index":877,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/providers/base.url.provider.ts",{"_index":510,"title":{},"body":{"injectables/BaseUrlProvider.html":{},"coverage.html":{}}}],["src/app/core/providers/base.url.provider.ts:6",{"_index":515,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["src/app/core/providers/base.url.provider.ts:7",{"_index":517,"title":{},"body":{"injectables/BaseUrlProvider.html":{}}}],["src/app/core/services/auth.service",{"_index":832,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:15",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:23",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:27",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:30",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:7",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/common.service",{"_index":1042,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/services/common.service.ts",{"_index":532,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/core/services/common.service.ts:10",{"_index":540,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:14",{"_index":542,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:18",{"_index":538,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:6",{"_index":536,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/common.service.ts:8",{"_index":544,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/core/services/employee.service",{"_index":741,"title":{},"body":{"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{}}}],["src/app/core/services/employee.service.ts",{"_index":788,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{}}}],["src/app/core/services/employee.service.ts:11",{"_index":791,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/services/employee.service.ts:15",{"_index":793,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/services/employee.service.ts:7",{"_index":790,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/services/jwt.utils",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/core/services/jwt.utils.ts",{"_index":887,"title":{},"body":{"injectables/JWTUtils.html":{},"coverage.html":{}}}],["src/app/core/services/jwt.utils.ts:15",{"_index":891,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["src/app/core/services/jwt.utils.ts:20",{"_index":894,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["src/app/core/services/session.service",{"_index":878,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["src/app/core/services/session.service.ts",{"_index":1085,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["src/app/core/services/session.service.ts:10",{"_index":1118,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:14",{"_index":1103,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:17",{"_index":1115,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:21",{"_index":1100,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:24",{"_index":1108,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:28",{"_index":1101,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:32",{"_index":1110,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:36",{"_index":1102,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:40",{"_index":1113,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:44",{"_index":1099,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:48",{"_index":1106,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:52",{"_index":1104,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:6",{"_index":1120,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:7",{"_index":1116,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:8",{"_index":1117,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/session.service.ts:9",{"_index":1119,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1266,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:10",{"_index":1270,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:7",{"_index":1268,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/address.validator.ts",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/confirm",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/custom.validators",{"_index":1240,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["src/app/core/validators/custom.validators.ts",{"_index":638,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/app/core/validators/custom.validators.ts:10",{"_index":648,"title":{},"body":{"classes/CustomValidators.html":{}}}],["src/app/core/validators/custom.validators.ts:11",{"_index":646,"title":{},"body":{"classes/CustomValidators.html":{}}}],["src/app/core/validators/custom.validators.ts:12",{"_index":651,"title":{},"body":{"classes/CustomValidators.html":{}}}],["src/app/core/validators/custom.validators.ts:8",{"_index":650,"title":{},"body":{"classes/CustomValidators.html":{}}}],["src/app/core/validators/custom.validators.ts:9",{"_index":644,"title":{},"body":{"classes/CustomValidators.html":{}}}],["src/app/core/validators/full",{"_index":1295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/mobile",{"_index":1297,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/valid",{"_index":1299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts",{"_index":660,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:11",{"_index":676,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:12",{"_index":674,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:14",{"_index":668,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:18",{"_index":670,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:22",{"_index":669,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:26",{"_index":672,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.component.ts:30",{"_index":673,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layout/dashboard/dashboard.module.ts",{"_index":687,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/layout/dashboard/test.component.ts",{"_index":1202,"title":{},"body":{"components/TestingComponent.html":{},"coverage.html":{}}}],["src/app/layout/employees/employee.list.component.ts",{"_index":692,"title":{},"body":{"components/EmployeeListComponent.html":{},"coverage.html":{}}}],["src/app/layout/employees/employee.list.component.ts:17",{"_index":726,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:18",{"_index":735,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:19",{"_index":738,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:21",{"_index":734,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:33",{"_index":708,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:39",{"_index":713,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:43",{"_index":711,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:55",{"_index":721,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:58",{"_index":712,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:65",{"_index":715,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:68",{"_index":717,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:72",{"_index":710,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:77",{"_index":722,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:81",{"_index":719,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employee.list.component.ts:85",{"_index":718,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["src/app/layout/employees/employees.module.ts",{"_index":782,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/app/layout/layout.component.ts",{"_index":909,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/layout/layout.component.ts:12",{"_index":913,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:17",{"_index":915,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:22",{"_index":914,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.module.ts",{"_index":938,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/app/layout/profile/company/company",{"_index":557,"title":{},"body":{"components/CompanyProfileComponent.html":{},"coverage.html":{}}}],["src/app/layout/profile/profile.module.ts",{"_index":1000,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/layout/profile/update",{"_index":1223,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["src/app/layout/profile/user/user",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["src/app/models/city.model",{"_index":1043,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/city.model.ts",{"_index":522,"title":{},"body":{"interfaces/City.html":{},"coverage.html":{}}}],["src/app/models/common.response",{"_index":1045,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/common.response.ts",{"_index":527,"title":{},"body":{"classes/CommonResponse.html":{},"coverage.html":{}}}],["src/app/models/common.response.ts:2",{"_index":531,"title":{},"body":{"classes/CommonResponse.html":{}}}],["src/app/models/common.response.ts:3",{"_index":529,"title":{},"body":{"classes/CommonResponse.html":{}}}],["src/app/models/common.response.ts:4",{"_index":530,"title":{},"body":{"classes/CommonResponse.html":{}}}],["src/app/models/company.model.ts",{"_index":549,"title":{},"body":{"interfaces/Company.html":{},"coverage.html":{}}}],["src/app/models/country.model",{"_index":1046,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/country.model.ts",{"_index":633,"title":{},"body":{"interfaces/Country.html":{},"coverage.html":{}}}],["src/app/models/state.model",{"_index":1044,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/state.model.ts",{"_index":1142,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{}}}],["src/app/models/user.model",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginComponent.html":{},"components/UpdatePasswordComponent.html":{},"injectables/UserService.html":{}}}],["src/app/models/user.model.ts",{"_index":1260,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/models/user.role",{"_index":1048,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/user.role.ts",{"_index":1263,"title":{},"body":{"classes/UserRole.html":{},"coverage.html":{}}}],["src/app/models/user.role.ts:2",{"_index":1264,"title":{},"body":{"classes/UserRole.html":{}}}],["src/app/models/user.role.ts:3",{"_index":1265,"title":{},"body":{"classes/UserRole.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":795,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":868,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:13",{"_index":876,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:14",{"_index":874,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:23",{"_index":875,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":1131,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:10",{"_index":1133,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/utils/action.component",{"_index":786,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/app/utils/action.component.ts",{"_index":8,"title":{},"body":{"components/ActionComponent.html":{},"coverage.html":{}}}],["src/app/utils/action.component.ts:18",{"_index":28,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:19",{"_index":31,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:20",{"_index":30,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:21",{"_index":32,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:23",{"_index":37,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:27",{"_index":36,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.component.ts:31",{"_index":33,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/utils/action.parent.component",{"_index":740,"title":{},"body":{"components/EmployeeListComponent.html":{},"modules/EmployeeModule.html":{}}}],["src/app/utils/action.parent.component.ts",{"_index":100,"title":{},"body":{"components/ActionParentComponent.html":{},"coverage.html":{}}}],["src/app/utils/action.parent.component.ts:17",{"_index":122,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:18",{"_index":121,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:20",{"_index":110,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:28",{"_index":118,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:33",{"_index":116,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:37",{"_index":114,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/action.parent.component.ts:41",{"_index":119,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["src/app/utils/on",{"_index":829,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabilize",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["start",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["started",{"_index":1363,"title":{"index.html":{}},"body":{}}],["starting",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["state",{"_index":255,"title":{"interfaces/State.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"components/RegisterComponent.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["state.firstchild(parent",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["state.model",{"_index":524,"title":{},"body":{"interfaces/City.html":{}}}],["state.statename",{"_index":1080,"title":{},"body":{"components/RegisterComponent.html":{}}}],["statecode",{"_index":1143,"title":{},"body":{"interfaces/State.html":{}}}],["stateid",{"_index":539,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/State.html":{}}}],["statements",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["statename",{"_index":1144,"title":{},"body":{"interfaces/State.html":{}}}],["states",{"_index":1011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["static",{"_index":621,"title":{},"body":{"classes/Constants.html":{},"classes/CustomValidators.html":{},"classes/UserRole.html":{}}}],["status",{"_index":95,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/CommonResponse.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["statusclicked",{"_index":666,"title":{},"body":{"components/DashboardComponent.html":{}}}],["statusclicked(status",{"_index":671,"title":{},"body":{"components/DashboardComponent.html":{}}}],["statuscolors",{"_index":1147,"title":{},"body":{"directives/StatusDirective.html":{}}}],["statusdirective",{"_index":94,"title":{"directives/StatusDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopcamera",{"_index":567,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["store",{"_index":206,"title":{},"body":{"injectables/Api.html":{}}}],["stored",{"_index":1380,"title":{},"body":{"index.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"interfaces/Company.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"interfaces/User.html":{},"classes/UserRole.html":{}}}],["studio",{"_index":803,"title":{},"body":{"components/FooterComponent.html":{}}}],["styles",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":585,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["submit",{"_index":830,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["subscribe((response",{"_index":749,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["subscription",{"_index":811,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["success",{"_index":628,"title":{},"body":{"classes/Constants.html":{},"components/UpdatePasswordComponent.html":{}}}],["successfully",{"_index":1258,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["support",{"_index":1420,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1421,"title":{},"body":{"modules.html":{}}}],["swupdate",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":610,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["template",{"_index":13,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["template:'testing",{"_index":1206,"title":{},"body":{"components/TestingComponent.html":{}}}],["templateurl",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["terminal",{"_index":1368,"title":{},"body":{"index.html":{}}}],["terms",{"_index":1083,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":1203,"title":{},"body":{"components/TestingComponent.html":{}}}],["test'},{'name",{"_index":88,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["test.component",{"_index":690,"title":{},"body":{"modules/DashboardModule.html":{}}}],["testing",{"_index":1204,"title":{},"body":{"components/TestingComponent.html":{}}}],["testingcomponent",{"_index":87,"title":{"components/TestingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":1150,"title":{},"body":{"directives/StatusDirective.html":{}}}],["text/javascript",{"_index":930,"title":{},"body":{"components/LayoutComponent.html":{}}}],["they're",{"_index":129,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this._baseappurl.apibaseurl",{"_index":228,"title":{},"body":{"injectables/Api.html":{}}}],["this.aggrid.api.getselectednodes",{"_index":758,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.api.get(\"employees",{"_index":794,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.api.get('countries",{"_index":545,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.api.get('user/profile",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.get(`cities/${stateid",{"_index":547,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.api.get(`states/${countryid",{"_index":546,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.api.get(this.appservice.geturl",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.post(\"users",{"_index":1271,"title":{},"body":{"injectables/UserService.html":{}}}],["this.api.post('forgot/password",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.post('save/user",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.post('signup",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.post('update/password",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiurl",{"_index":227,"title":{},"body":{"injectables/Api.html":{}}}],["this.appref.isstable.pipe(first(isstable",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.gettoken",{"_index":1221,"title":{},"body":{"classes/TokenInterceptor.html":{}}}],["this.authservice.forgotpassword({email",{"_index":850,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.login(user",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.register(user",{"_index":1076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.updatepassword(user",{"_index":1253,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.cell",{"_index":136,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this.cities",{"_index":1067,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.commonservice.getcitylist(state.stateid",{"_index":1066,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.commonservice.getcountrylist",{"_index":1061,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.commonservice.getstatelist(country.countryid",{"_index":1064,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.context",{"_index":745,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.countries",{"_index":1062,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.customcellrendererfunc",{"_index":730,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.disabled",{"_index":681,"title":{},"body":{"components/DashboardComponent.html":{},"directives/StatusDirective.html":{}}}],["this.document.body.classname",{"_index":840,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":1177,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.employeeservice.getemployeelist",{"_index":748,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.errors.push(error",{"_index":601,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["this.fb.group",{"_index":836,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.forgotpasswordgroup",{"_index":835,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotpasswordgroup.get('email",{"_index":839,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.forgotpasswordgroup.reset",{"_index":855,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.fullname",{"_index":879,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.fullname.setvalue(this.sessionservice.getfullname",{"_index":1255,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.getcolorcode(status",{"_index":1181,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.getcountrylist",{"_index":1060,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.getemployeelist",{"_index":747,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.getjson().subscribe(data",{"_index":431,"title":{},"body":{"injectables/AppService.html":{}}}],["this.gettitle(router.routerstate",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gettitle(state",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["this.highlight(this.status",{"_index":1174,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.http.delete(this.apiurl",{"_index":233,"title":{},"body":{"injectables/Api.html":{}}}],["this.http.get('./assets/conf.url.json",{"_index":434,"title":{},"body":{"injectables/AppService.html":{}}}],["this.http.get(this.apiurl",{"_index":229,"title":{},"body":{"injectables/Api.html":{}}}],["this.http.post(endpoint",{"_index":231,"title":{},"body":{"injectables/Api.html":{}}}],["this.http.put(this.apiurl",{"_index":232,"title":{},"body":{"injectables/Api.html":{}}}],["this.httpoptions",{"_index":230,"title":{},"body":{"injectables/Api.html":{}}}],["this.keyboard.add",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["this.loadscript",{"_index":926,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.loginformgroup",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginformgroup.get('email",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginformgroup.get('password",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginformgroup.get('rememberme",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ondeleteclicked.emit(this.cell",{"_index":47,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.oneditclicked.emit(this.cell",{"_index":46,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.onviewclicked.emit(this.cell",{"_index":45,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.params",{"_index":135,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this.params.context.componentparent.ondeleteclicked(cell",{"_index":145,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this.params.context.componentparent.oneditclicked(cell",{"_index":144,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this.params.context.componentparent.onviewclicked(cell",{"_index":143,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["this.parsejwt(token",{"_index":902,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["this.profilepicture",{"_index":881,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.registerformgroup",{"_index":1049,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('agreeterms",{"_index":1059,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('city",{"_index":1056,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('confirmpassword",{"_index":1058,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('country",{"_index":1054,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('email",{"_index":1053,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('fullname",{"_index":1052,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('password",{"_index":1057,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerformgroup.get('state",{"_index":1055,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":1193,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":1179,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.router.navigate([\"/layout/dashboard",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":858,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.router.navigate(['/login",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["this.rowdata",{"_index":751,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["this.sessionservice.getfullname",{"_index":1242,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.sessionservice.getuserid",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.sessionservice.logout",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["this.sessionservice.setemail(response.data.email",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.sessionservice.setfullname(`${response.data.fullname",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.sessionservice.setprofilepic(response.data.image",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.sessionservice.setuserid(response.data.userid",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.settitle(title",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showwebcam",{"_index":605,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["this.states",{"_index":1065,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.status",{"_index":677,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.statuscolors.filter(item",{"_index":1197,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.subscription",{"_index":849,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":860,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.swupdate.available.subscribe",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.checkforupdate",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.isenabled",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titlecase.transform(this.text",{"_index":1178,"title":{},"body":{"directives/StatusDirective.html":{}}}],["this.titleservice.settitle(title",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastrservice.error('please",{"_index":847,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastrservice.error(error.error.message",{"_index":755,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.toastrservice.error(response.message",{"_index":856,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastrservice.success('passsword",{"_index":1256,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.toastrservice.success(response.message",{"_index":853,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.trigger.asobservable",{"_index":604,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["this.trigger.next",{"_index":600,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["this.updatepasswordformgroup",{"_index":1241,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.updatepasswordformgroup.get('confirmpassword",{"_index":1248,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.updatepasswordformgroup.get('fullname",{"_index":1245,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.updatepasswordformgroup.get('newpassword",{"_index":1247,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.updatepasswordformgroup.get('password",{"_index":1246,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.url",{"_index":432,"title":{},"body":{"injectables/AppService.html":{}}}],["this.webcamimage",{"_index":603,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["times",{"_index":612,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["title",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["title_error",{"_index":622,"title":{},"body":{"classes/Constants.html":{}}}],["title_info",{"_index":623,"title":{},"body":{"classes/Constants.html":{}}}],["title_success",{"_index":624,"title":{},"body":{"classes/Constants.html":{}}}],["title_warning",{"_index":625,"title":{},"body":{"classes/Constants.html":{}}}],["titlecase",{"_index":1157,"title":{},"body":{"directives/StatusDirective.html":{}}}],["titlecasepipe",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"directives/StatusDirective.html":{}}}],["titleservice",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["toastr",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{},"index.html":{}}}],["toastrmodule",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":707,"title":{},"body":{"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["toggle",{"_index":667,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["token",{"_index":892,"title":{},"body":{"injectables/JWTUtils.html":{},"injectables/SessionService.html":{}}}],["token.split('.')[1",{"_index":904,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["tokeninterceptor",{"_index":370,"title":{"classes/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"classes/TokenInterceptor.html":{},"coverage.html":{}}}],["tool",{"_index":1409,"title":{},"body":{"index.html":{}}}],["transition",{"_index":841,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["trees",{"_index":1136,"title":{},"body":{"components/SidebarComponent.html":{}}}],["trees.tree",{"_index":1138,"title":{},"body":{"components/SidebarComponent.html":{}}}],["trigger",{"_index":562,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["triggerobservable",{"_index":570,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["triggersnapshot",{"_index":568,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["true",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseUrlProvider.html":{},"interfaces/City.html":{},"classes/CommonResponse.html":{},"injectables/CommonService.html":{},"interfaces/Company.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"interfaces/Country.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"injectables/EmployeeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"interfaces/State.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{},"dependencies.html":{},"index.html":{}}}],["ui/http",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/LayoutModule.html":{}}}],["undefined",{"_index":859,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/JWTUtils.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["update",{"_index":90,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"injectables/Api.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"index.html":{}}}],["updated",{"_index":1257,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["updatepassword",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatepassword(user",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatepasswordcomponent",{"_index":89,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatepasswordformgroup",{"_index":1224,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["updatepasswordformgroup.invalid",{"_index":1249,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["updatepasswordformgroup.reset",{"_index":1254,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["updatepasswordformgroup.value",{"_index":1251,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["updates",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["updateuser",{"_index":1267,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user",{"_index":1269,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserprofile",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserprofile(user",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":175,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{}}}],["use",{"_index":616,"title":{},"body":{"components/CompanyProfileComponent.html":{},"index.html":{}}}],["useclass",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":92,"title":{"interfaces/User.html":{}},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user.email",{"_index":851,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["user.role",{"_index":1074,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["user.userid",{"_index":1252,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["user/user",{"_index":1002,"title":{},"body":{"modules/ProfileModule.html":{}}}],["userid",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmployeeService.html":{},"injectables/SessionService.html":{}}}],["userid_key",{"_index":1090,"title":{},"body":{"injectables/SessionService.html":{}}}],["userprofilecomponent",{"_index":91,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userrole",{"_index":1047,"title":{"classes/UserRole.html":{}},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"classes/UserRole.html":{},"coverage.html":{}}}],["userrole.employee",{"_index":1075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["users",{"_index":1386,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":340,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1406,"title":{},"body":{"index.html":{}}}],["v3",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["valid",{"_index":658,"title":{},"body":{"classes/CustomValidators.html":{},"components/ForgotPasswordComponent.html":{},"injectables/JWTUtils.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["validatepasswordpolicy",{"_index":642,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatepasswordpolicy(control",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":827,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["validators.email",{"_index":838,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["validators.pattern(/^[0",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^[a",{"_index":1050,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":837,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["value",{"_index":203,"title":{},"body":{"injectables/Api.html":{},"injectables/BaseUrlProvider.html":{},"components/CompanyProfileComponent.html":{},"classes/Constants.html":{},"classes/CustomValidators.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/SessionService.html":{},"directives/StatusDirective.html":{},"classes/TokenInterceptor.html":{},"components/UpdatePasswordComponent.html":{},"classes/UserRole.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/JWTUtils.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TestingComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["variable",{"_index":205,"title":{},"body":{"injectables/Api.html":{},"injectables/AppService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":1424,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":898,"title":{},"body":{"injectables/JWTUtils.html":{}}}],["version",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"injectables/JWTUtils.html":{},"index.html":{}}}],["videooptions",{"_index":563,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["viewchild",{"_index":739,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["viewchild('aggrid",{"_index":725,"title":{},"body":{"components/EmployeeListComponent.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/ActionComponent.html":{},"components/ActionParentComponent.html":{},"components/AppComponent.html":{},"components/CompanyProfileComponent.html":{},"components/DashboardComponent.html":{},"components/EmployeeListComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"directives/StatusDirective.html":{},"components/UpdatePasswordComponent.html":{}}}],["warning",{"_index":630,"title":{},"body":{"classes/Constants.html":{}}}],["way",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["webcam",{"_index":597,"title":{},"body":{"components/CompanyProfileComponent.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{}}}],["webcamimage",{"_index":564,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["webcaminiterror",{"_index":575,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["webcammodule",{"_index":1001,"title":{},"body":{"modules/ProfileModule.html":{}}}],["white",{"_index":1182,"title":{},"body":{"directives/StatusDirective.html":{}}}],["widget=\"tree",{"_index":1137,"title":{},"body":{"components/SidebarComponent.html":{}}}],["width",{"_index":588,"title":{},"body":{"components/CompanyProfileComponent.html":{}}}],["window.location.reload",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["work",{"_index":134,"title":{},"body":{"components/ActionParentComponent.html":{}}}],["worked",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["worker",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["yes",{"_index":189,"title":{},"body":{"injectables/Api.html":{},"components/CompanyProfileComponent.html":{}}}],["z",{"_index":1051,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z.]{2,5",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["z0",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["z]+[a",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["za",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmployeeModule.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ag-clickable\n            \n\n\n\n            \n                template\n                 \n \n \n \n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cell\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClicked\n                            \n                            \n                                onEditClicked\n                            \n                            \n                                onViewClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cell\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/action.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/action.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/action.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onViewClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/action.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onView\n                        \n                        \n                    \n                \n            \n            \n                \nonView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from \"@angular/core\";\n\n@Component({\n    selector: 'ag-clickable',\n    template: `\n     \n     \n     \n     \n     \n     \n    \n    `    \n})\nexport class ActionComponent {\n    @Input() cell: any;\n    @Output() onEditClicked = new EventEmitter();\n    @Output() onDeleteClicked = new EventEmitter();\n    @Output() onViewClicked = new EventEmitter();\n\n    onView(): void {\n        this.onViewClicked.emit(this.cell);\n    }\n\n    onEdit(): void {\n        this.onEditClicked.emit(this.cell);\n    }\n\n    onDelete(): void {\n        this.onDeleteClicked.emit(this.cell);\n    }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionParentComponent.html":{"url":"components/ActionParentComponent.html","title":"component - ActionParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/action.parent.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICellRendererAngularComp\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                clickable-cell\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cell\n                            \n                            \n                                    Private\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Public\n                                onDeleteClicked\n                            \n                            \n                                    Public\n                                onEditClicked\n                            \n                            \n                                    Public\n                                onViewClicked\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.parent.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeleteClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.parent.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onEditClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.parent.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onViewClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.parent.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/action.parent.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cell\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/action.parent.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utils/action.parent.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\n\n// both this and the parent component could be folded into one component as they're both simple, but it illustrates how\n// a fuller example could work\n@Component({\n    selector: 'clickable-cell',\n    template: `\n        \n    `\n})\nexport class ActionParentComponent implements ICellRendererAngularComp {\n    private params: any;\n    public cell: any;\n\n    agInit(params: any): void {\n        this.params = params;\n        this.cell = {\n            row: params.value, col: params.colDef.headerName,\n            data: params.data\n        };\n    }\n\n    public onViewClicked(cell: any): void {\n        this.params.context.componentParent.onViewClicked(cell);\n    }\n\n\n    public onEditClicked(cell: any): void {\n        this.params.context.componentParent.onEditClicked(cell);\n    }\n\n    public onDeleteClicked(cell: any): void {\n        this.params.context.componentParent.onDeleteClicked(cell);\n    }\n\n    refresh(): boolean {\n        return false;\n    }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Api.html":{"url":"injectables/Api.html","title":"injectable - Api","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Api\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/providers/api.ts\n        \n\n            \n                Description\n            \n            \n                Api is a generic REST Api handler. Set your API apiURL first.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _baseAppUrl: BaseUrlProvider)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/providers/api.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                http service to call apis\n\n                                                        \n                                                \n                                                \n                                                        _baseAppUrl\n                                                  \n                                                        \n                                                                        BaseUrlProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                base url can prefix to resources\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/providers/api.ts:74\n                \n            \n\n\n            \n                \n                    Delete method to call api for remove record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        controller url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(endpoint: string, params?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/providers/api.ts:44\n                \n            \n\n\n            \n                \n                    function to call get api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        controller url\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        parameters if any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \npatch(endpoint: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/providers/api.ts:84\n                \n            \n\n\n            \n                \n                    Patch record if required to update partially\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        controller url\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data if any as payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/providers/api.ts:55\n                \n            \n\n\n            \n                \n                    Post method to call api securely to insert new record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        controller url\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data if any as payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/providers/api.ts:65\n                \n            \n\n\n            \n                \n                    Put method to call api securely to update record\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        controller url\n\n                                    \n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        data if any as payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/providers/api.ts:16\n                            \n                        \n\n                \n                    \n                        variable to store base url\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/providers/api.ts:34\n                            \n                        \n\n                \n                    \n                        http service to call apis\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        /**\n         * Headers as application/json\n         */\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n        })\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/providers/api.ts:20\n                            \n                        \n\n                \n                    \n                        Common http options for all api calls\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BaseUrlProvider } from './base.url.provider';\n\n/**\n * Api is a generic REST Api handler. Set your API apiURL first.\n * @author Pravin P Patil\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class Api {\n    /**\n     * variable to store base url\n     */\n    private apiURL: string = \"\";\n    /**\n     * Common http options for all api calls\n     */\n    private httpOptions = {\n        /**\n         * Headers as application/json\n         */\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n        })\n    }\n\n    /**\n     * \n     * @param http http service to call apis\n     * @param _baseAppUrl base url can prefix to resources\n     */\n    constructor(public http: HttpClient, private _baseAppUrl: BaseUrlProvider) {\n        this.apiURL = this._baseAppUrl.apiBaseUrl;\n    }\n\n    /**\n     * function to call get api\n     * \n     * @param endpoint controller url\n     * @param params parameters if any\n     */\n    get(endpoint: string, params?: any) {\n\n        return this.http.get(this.apiURL + endpoint, this.httpOptions);\n    }\n\n    /**\n     * Post method to call api securely to insert new record\n     * \n     * @param endpoint controller url\n     * @param body data if any as payload\n     */\n    post(endpoint: string, body: any) {\n        return this.http.post(endpoint, body, this.httpOptions);\n    }\n\n    /**\n     * Put method to call api securely to update record\n     * \n     * @param endpoint controller url\n     * @param body data if any as payload\n     */\n    put(endpoint: string, body: any) {\n        return this.http.put(this.apiURL + endpoint, body, this.httpOptions);\n    }\n\n    /**\n     * Delete method to call api for remove record\n     * \n     * @param endpoint controller url\n     */\n    delete(endpoint: string) {\n        return this.http.delete(this.apiURL + endpoint, this.httpOptions);\n    }\n\n    /**\n     * Patch record if required to update partially\n     * \n     * @param endpoint controller url\n     * @param body data if any as payload\n     */\n    patch(endpoint: string, body: any) {\n        return this.http.put(this.apiURL + endpoint, body, this.httpOptions);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appRef: ApplicationRef, titleService: Title, router: Router, appService: AppService, swUpdate: SwUpdate)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle(state, parent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        collect that title data properties from all child routes\nthere might be a better way but this worked for me\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ApplicationRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AppService } from './app.service';\nimport { SwUpdate } from '@angular/service-worker';\nimport { interval, concat } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private appRef: ApplicationRef, private titleService: Title, router: Router, private appService: AppService,\n    private swUpdate: SwUpdate) {\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        let title = 'Admin LTE - ' + this.getTitle(router.routerState, router.routerState.root).join('-');\n        this.setTitle(title);\n      }\n    });\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      console.log(this.appService.getUrl());\n    }, 1000);\n\n    if (this.swUpdate.isEnabled) {\n      // Allow the app to stabilize first, before starting polling for updates with `interval()`.\n      const appIsStable$ = this.appRef.isStable.pipe(first(isStable => isStable === true));\n      const everySixHours$ = interval(6 * 60 * 60 * 1000);\n      const everySixHoursOnceAppIsStable$ = concat(appIsStable$, everySixHours$);\n\n      everySixHoursOnceAppIsStable$.subscribe(() => this.swUpdate.checkForUpdate());\n      this.swUpdate.available.subscribe(() => {\n        console.log('updates available');\n        if (confirm(\"New version available. Load New Version?\")) {\n          window.location.reload();\n        }\n      });\n    }\n  }\n\n  /**\n   * \n   * @param state \n   * @param parent \n   *  collect that title data properties from all child routes\n   * there might be a better way but this worked for me\n   */\n  getTitle(state, parent) {\n    let data: string[] = [];\n    if (parent && parent.snapshot.data && parent.snapshot.data.title) {\n      data.push(parent.snapshot.data.title);\n    }\n\n    if (state && parent) {\n      data.push(... this.getTitle(state, state.firstChild(parent)));\n    }\n    return data;\n  }\n\n  /**\n   * \n   * @param title \n   */\n  setTitle(title: string) {\n    this.titleService.setTitle(title);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBaseUrlProvider\n\nBaseUrlProvider\n\nAppModule -->\n\nBaseUrlProvider->AppModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nAppModule -->\n\nCommonService->AppModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nAppModule -->\n\nEmployeeService->AppModule\n\n\n\n\n\nJWTUtils\n\nJWTUtils\n\nAppModule -->\n\nJWTUtils->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                        \n                            BaseUrlProvider\n                        \n                        \n                            CommonService\n                        \n                        \n                            EmployeeService\n                        \n                        \n                            JWTUtils\n                        \n                        \n                            SessionService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { BlockUIHttpModule } from 'ng-block-ui/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthService } from './core/services/auth.service';\nimport { Api } from './core/providers/api';\nimport { BaseUrlProvider } from './core/providers/base.url.provider';\nimport { SessionService } from './core/services/session.service';\nimport { CommonService } from './core/services/common.service';\nimport { JWTUtils } from './core/services/jwt.utils';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\nimport { TitleCasePipe } from '@angular/common';\n\nimport { KeyboardShortcutsModule, KeyboardShortcutsService } from 'ng-keyboard-shortcuts';\nimport { UserService } from './core/services/user.service';\nimport { EmployeeService } from './core/services/employee.service';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AppService } from './app.service';\n\nconst routes: Routes = [\n  { path: '', loadChildren: \"./layout/layout.module#LayoutModule\" },\n  { path: 'auth', loadChildren: \"./auth/auth.module#AuthModule\" }\n];\n\n@NgModule({\n  schemas: [],\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    KeyboardShortcutsModule,\n    AuthModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' }),\n\n    BlockUIModule.forRoot(), // Import BlockUIModule\n    BlockUIHttpModule.forRoot(), ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }), // Import Block UI Http Module\n    HttpClientModule\n\n  ],\n  exports: [RouterModule],\n  providers: [\n    TitleCasePipe,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    JWTUtils,\n    BaseUrlProvider,\n    SessionService,\n    AuthService,\n    CommonService,\n    UserService,\n    EmployeeService,\n    KeyboardShortcutsService,\n    AppService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n\n  constructor(private keyboard: KeyboardShortcutsService) {\n    this.keyboard.add([\n      {\n        key: 'ctrl f',\n        command: () => console.log('ctrl + f')\n      },\n      {\n        key: 'ctrl p',\n        command: () => console.log('ctrl + p')\n      },\n      {\n        key: 'ctrl shift f',\n        command: () => console.log('ctrl + shift + f'),\n      },\n      {\n        key: 'cmd f',\n        command: () => console.log('cmd + f'),\n        preventDefault: true\n      }\n    ]);\n\n\n    this.keyboard.add({\n      key: ['cmd + shift + g', 'cmd + g'],\n      command: ({ event, key }) => console.log(key, event)\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n            \n                Description\n            \n            \n                This is AppService available on root module level so all the modules can access it.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJson\n                            \n                            \n                                getUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:16\n                            \n                        \n\n                \n                    \n                            Reading base url from configuration file\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                httclient to read configuration file\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:35\n                \n            \n\n\n            \n                \n                    configuration file will return a configurable json\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:44\n                \n            \n\n\n            \n                \n                    this function return configurable url can be accessed by services or components.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        base url\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.service.ts:16\n                            \n                        \n\n                \n                    \n                        variable to hold base url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * This is AppService available on root module level so all the modules can access it.\n * \n * @author Pravin P Patil\n */\n@Injectable({ providedIn: \"root\" })\nexport class AppService {\n    \n    /**\n     * variable to hold base url\n     */\n    private url: string;\n\n    /**\n     * Reading base url from configuration file\n     * \n     * @param http httclient to read configuration file\n     * \n     */\n    constructor(private http: HttpClient) {\n        this.getJson().subscribe(data => {\n            this.url = data.url;\n        });\n    }\n    \n    /**\n     * configuration file will return a configurable json\n     * \n     * @return observable\n     */\n    getJson(): Observable {\n        return this.http.get('./assets/conf.url.json');\n    }\n\n    /**\n     * this function return configurable url can be accessed by services or components.\n     * \n     * @return base url\n     */\n    getUrl(): string {\n        return this.url;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-component\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from \"@angular/core\";\n\n@Component({\n    selector:'app-auth-component',\n    template:''\n})\n\nexport class AuthComponent\n{}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router, CanActivateChild } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../services/session.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivateChild {\n\n    constructor(private router: Router, private sessionService: SessionService) {\n    }\n\n    public canActivateChild(next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable | Promise | boolean {\n            //console.log('auth guard', this.sessionService.getUserID(), this.sessionService.getUserID() == null);\n        if (this.sessionService.getUserID() != null)\n            return true;\n        else {\n            this.sessionService.logOut();\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthComponent } from './auth.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent, data: { title: 'Login' } },\n  { path: 'register', component: RegisterComponent, data: { title: 'Register' } },\n  { path: 'forgot-password', component: ForgotPasswordComponent, data: { title: 'Forgot Password' } }\n];\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    ForgotPasswordComponent,\n    AuthComponent\n  ],\n  imports: [    \n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [RouterModule],\n  providers: []  \n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: Api, appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        Api\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserProfile(userID: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePassword(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Api\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Api } from '../providers/api';\nimport { User } from 'src/app/models/user.model';\nimport { AppService } from 'src/app/app.service';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(public api: Api, private appService: AppService) { }\n\n    login(user: User) {\n        return this.api.get(this.appService.getUrl() + 'login.json', user);\n    }\n\n    register(user: User) {\n        return this.api.post('signup', user);\n    }\n\n    forgotPassword(email: any) {\n        return this.api.post('forgot/password', email);\n    }\n\n    updateUserProfile(user: User) {\n        return this.api.post('Save/User', user);\n    }\n\n    getUserProfile(userID: Number) {\n        return this.api.get('User/Profile/' + userID);\n    }\n    updatePassword(user: User) {\n        return this.api.post('update/password', user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseUrlProvider.html":{"url":"injectables/BaseUrlProvider.html","title":"injectable - BaseUrlProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseUrlProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/providers/base.url.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                apiBaseUrl\n                            \n                            \n                                    Public\n                                profilePictureBaseUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            apiBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:4200/assets/api/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/providers/base.url.provider.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profilePictureBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:4200/assets/dist/img/\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/providers/base.url.provider.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class BaseUrlProvider{\n    //public apiBaseUrl= \"http://localhost:9000/api/v1/\";\n    public readonly apiBaseUrl= \"http://localhost:4200/assets/api/\";\n    public profilePictureBaseUrl= \"http://localhost:4200/assets/dist/img/\";\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/City.html":{"url":"interfaces/City.html","title":"interface - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/city.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cityID\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cityID\n                                    \n                                \n                                \n                                    \n                                        cityID:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { State } from './state.model';\n\nexport interface City {\n    cityID: number;\n    name: string;\n    state?: State;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonResponse.html":{"url":"classes/CommonResponse.html","title":"class - CommonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/common.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                message\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/common.response.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/common.response.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/common.response.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CommonResponse {\n    status: boolean;\n    data: any;\n    message: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/common.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountryList\n                            \n                            \n                                    Public\n                                getStateList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: Api)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/common.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        Api\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(stateID: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/common.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateID\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountryList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountryList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/common.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStateList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStateList(countryID: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/common.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryID\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Api\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/common.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Api } from '../providers/api';\nimport { User } from 'src/app/models/user.model';\n\n@Injectable()\nexport class CommonService {\n\n    constructor(public api: Api) { }\n\n    public getCountryList() {\n        return this.api.get('countries');\n    }\n\n    public getStateList(countryID : Number) {\n        return this.api.get(`states/${countryID}`);\n    }\n\n    public getCityList(stateID: Number) {\n        return this.api.get(`cities/${stateID}`);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Company.html":{"url":"interfaces/Company.html","title":"interface - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/company.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        alternateContactNumber\n                                \n                                \n                                        City\n                                \n                                \n                                        companyName\n                                \n                                \n                                        contactNumber\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        registeredNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alternateContactNumber\n                                    \n                                \n                                \n                                    \n                                        alternateContactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        City\n                                    \n                                \n                                \n                                    \n                                        City:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyName\n                                    \n                                \n                                \n                                    \n                                        companyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactNumber\n                                    \n                                \n                                \n                                    \n                                        contactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registeredNumber\n                                    \n                                \n                                \n                                    \n                                        registeredNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { City } from './city.model';\n\nexport interface Company {\n    companyName: string;\n    registeredNumber: string;\n    contactNumber: string;\n    alternateContactNumber: string;\n    address: string;\n    City: City;\n    image? : string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompanyProfileComponent.html":{"url":"components/CompanyProfileComponent.html","title":"component - CompanyProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompanyProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/profile/company/company-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-company\n            \n\n\n\n\n            \n                templateUrl\n                ./company-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Public\n                                showWebcam\n                            \n                            \n                                    Private\n                                trigger\n                            \n                            \n                                    Public\n                                videoOptions\n                            \n                            \n                                    Public\n                                webcamImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleImage\n                            \n                            \n                                    Public\n                                handleInitError\n                            \n                            \n                                    Public\n                                stopCamera\n                            \n                            \n                                    Public\n                                triggerSnapshot\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    triggerObservable\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/profile/company/company-profile.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleImage(webcamImage: WebcamImage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/company/company-profile.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    webcamImage\n                                    \n                                            WebcamImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleInitError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleInitError(error: WebcamInitError)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/company/company-profile.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            WebcamInitError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopCamera()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/company/company-profile.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            triggerSnapshot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerSnapshot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/company/company-profile.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebcamInitError[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {image:'assets/dist/img/user2-160x160.jpg'}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showWebcam\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            trigger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            videoOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaTrackConstraints\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // width: {ideal: 1024},\n        // height: {ideal: 576}\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            webcamImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebcamImage\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        triggerObservable\n                    \n                \n\n                \n                    \n                        gettriggerObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/profile/company/company-profile.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { WebcamInitError, WebcamImage } from 'ngx-webcam';\nimport { Subject, Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-profile-company',\n    templateUrl: './company-profile.component.html'\n})\nexport class CompanyProfileComponent {\n\n    public profile = {image:'assets/dist/img/user2-160x160.jpg'};\n    public showWebcam= false;\n    public errors: WebcamInitError[] = [];\n    // latest snapshot\n    public webcamImage: WebcamImage = null;\n    // webcam snapshot trigger\n    private trigger: Subject = new Subject();\n    public videoOptions: MediaTrackConstraints = {\n        // width: {ideal: 1024},\n        // height: {ideal: 576}\n    };\n\n    constructor() {\n    }\n\n    public triggerSnapshot(): void {\n        this.trigger.next();\n    }\n\n    public handleInitError(error: WebcamInitError): void {\n        this.errors.push(error);\n    }\n\n    public handleImage(webcamImage: WebcamImage): void {\n        console.info('received webcam image', webcamImage);\n        this.webcamImage = webcamImage;\n    }\n\n    public get triggerObservable(): Observable {\n        return this.trigger.asObservable();\n    }\n\n    public stopCamera(){\n        this.showWebcam = !this.showWebcam;\n    }\n\n}\n    \n\n    \n        \n    \n        Company Profile\n        Control panel\n    \n    \n         Home\n        Dashboard\n    \n\n\n    \n        \n            Company Profile\n        \n        \n            \n                \n                    \n\n                    \n                         Take Photo\n                    \n                \n                \n\n                \n            \n        \n    \n\n\n\n    \n        \n            \n                &times;\n                Capture Image From Camera\n            \n            \n                \n                    \n                        \n                    \n                \n            \n            \n                Capture Image\n                Close\n            \n        \n    \n\n\n\n    \n        \n            \n                &times;\n                Do you wants to use captured Image as profile pick\n            \n            \n                \n\n            \n\n            \n                Yes\n                No\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Company Profile        Control panel                 Home        Dashboard                            Company Profile                                                                                                             Take Photo                                                                                                                                    ×                Capture Image From Camera                                                                                                                                                                Capture Image                Close                                                                ×                Do you wants to use captured Image as profile pick                                                                                Yes                No                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'CompanyProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constants.html":{"url":"classes/Constants.html","title":"class - Constants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                TITLE_ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                TITLE_INFO\n                            \n                            \n                                    Static\n                                    Readonly\n                                TITLE_SUCCESS\n                            \n                            \n                                    Static\n                                    Readonly\n                                TITLE_WARNING\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Error\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/constants.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE_INFO\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Info\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/constants.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Success\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/constants.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TITLE_WARNING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Warning\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/constants.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Constants {\n    public static readonly TITLE_SUCCESS = \"Success\";\n    public static readonly TITLE_INFO = \"Info\";\n    public static readonly TITLE_ERROR = \"Error\";\n    public static readonly TITLE_WARNING = \"Warning\";    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/country.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        countryCode\n                                \n                                \n                                        countryId\n                                \n                                \n                                        countryName\n                                \n                                \n                                            Optional\n                                        currency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countryId\n                                    \n                                \n                                \n                                    \n                                        countryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countryName\n                                    \n                                \n                                \n                                    \n                                        countryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Country {\n    countryId: number;\n    countryName: string;\n    countryCode?: string;\n    currency?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/custom.validators.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                address\n                            \n                            \n                                    Static\n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Static\n                                    Readonly\n                                fullName\n                            \n                            \n                                    Static\n                                    Readonly\n                                mobileNumber\n                            \n                            \n                                    Static\n                                    Readonly\n                                validatePasswordPolicy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : addressValidator\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/validators/custom.validators.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : confirmPasswordValidator\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/validators/custom.validators.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fullNameValidator\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/validators/custom.validators.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            mobileNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mobileNumberValidator\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/validators/custom.validators.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            validatePasswordPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ValidatePasswordPolicy\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/validators/custom.validators.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { mobileNumberValidator } from './mobile-number.validator';\nimport { addressValidator } from './address.validator';\nimport { fullNameValidator } from './full-name.validator';\nimport { confirmPasswordValidator } from './confirm-password.validator';\nimport { ValidatePasswordPolicy } from './valid-password.policy.validator';\n\nexport class CustomValidators {\n    public static readonly mobileNumber = mobileNumberValidator;\n    public static readonly address = addressValidator;\n    public static readonly fullName = fullNameValidator;\n    public static readonly confirmPassword = confirmPasswordValidator;\n    public static readonly validatePasswordPolicy = ValidatePasswordPolicy;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                approvedClicked\n                            \n                            \n                                    Public\n                                doneClicked\n                            \n                            \n                                    Public\n                                rejectedClicked\n                            \n                            \n                                    Public\n                                statusClicked\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            approvedClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    approvedClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/dashboard/dashboard.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doneClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doneClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/dashboard/dashboard.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rejectedClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rejectedClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/dashboard/dashboard.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            statusClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    statusClicked(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/dashboard/dashboard.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/dashboard/dashboard.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/dashboard/dashboard.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"APPROVED\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/dashboard/dashboard.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html'\n})\n\nexport class DashboardComponent {\n\n    public status: string = \"APPROVED\";\n    public disabled: boolean = false;\n\n    public approvedClicked() {\n        this.status = \"APPROVED\";\n    }\n\n    public rejectedClicked() {\n        this.status = \"REJECTED\";\n    }\n\n    public doneClicked() {\n        this.status = \"DONE\";\n    }\n\n    public statusClicked(status: string) {\n        console.log(status);\n    }\n\n    public toggle() {\n        this.disabled = !this.disabled;\n    }\n\n}\n    \n\n    \n        \n    \n        Dashboard\n        Control panel\n    \n    \n         Home\n        Dashboard\n    \n\n\n    \n        \n            Dashboard\n        \n        \n            \n                Dashboard\n            \n            \n                 Approved \n                     Rejected \n                     Done \n                     Active \n                \n            \n            \n                \n                    \n                    \n                \n            \n        \n        \n            Footer\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Dashboard        Control panel                 Home        Dashboard                            Dashboard                                            Dashboard                                         Approved                      Rejected                      Done                      Active                                                                                                                                                         Footer            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nStatusDirective\n\nStatusDirective\n\nDashboardModule -->\n\nStatusDirective->DashboardModule\n\n\n\n\n\nTestingComponent\n\nTestingComponent\n\nDashboardModule -->\n\nTestingComponent->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/dashboard/dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            StatusDirective\n                        \n                        \n                            TestingComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            NO_ERRORS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, NO_ERRORS_SCHEMA } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { TestingComponent } from './test.component';\nimport { StatusDirective } from 'src/app/core/directives/status.directive';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n    { path: '', component: DashboardComponent, data: { title: 'Dashboard' } }\n];\n\n@NgModule({\n    schemas: [NO_ERRORS_SCHEMA],\n    declarations: [DashboardComponent, TestingComponent, StatusDirective],\n    imports: [CommonModule, RouterModule, RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class DashboardModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeListComponent.html":{"url":"components/EmployeeListComponent.html","title":"component - EmployeeListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/employees/employee.list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-employee-list\n            \n\n\n\n\n            \n                templateUrl\n                employee.list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agGrid\n                            \n                            \n                                columnDefs\n                            \n                            \n                                    Public\n                                context\n                            \n                            \n                                gridOptions\n                            \n                            \n                                rowData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                customCellRendererFunc\n                            \n                            \n                                    Public\n                                getEmployeeList\n                            \n                            \n                                getSelectedRows\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                onCellDoubleClicked\n                            \n                            \n                                    Public\n                                onDeleteClicked\n                            \n                            \n                                    Public\n                                onEditClicked\n                            \n                            \n                                onGridReady\n                            \n                            \n                                    Public\n                                onViewClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeService: EmployeeService, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/employees/employee.list.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            customCellRendererFunc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    customCellRendererFunc(params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEmployeeList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmployeeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedRows\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCellClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonCellClicked(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCellDoubleClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonCellDoubleClicked(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeleteClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onEditClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGridReady\n                        \n                        \n                    \n                \n            \n            \n                \nonGridReady(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onViewClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewClicked(cell: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/employees/employee.list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            agGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AgGridNg2\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('agGrid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/employees/employee.list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnDefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        { headerName: 'Image', field: '', cellRenderer: this.customCellRendererFunc },\n        { headerName: 'Employee Name', field: 'fullName' },\n        { headerName: 'Email ID', field: 'email' },\n        { headerName: 'Mobile Number', field: 'mobileNumber' },\n        { headerName: 'Address', field: 'address' },\n        {\n            headerName: 'Action', field: 'name',\n            cellRendererFramework: ActionParentComponent,\n        }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/employees/employee.list.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/employees/employee.list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { rowHeight: 50 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/employees/employee.list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/employees/employee.list.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AgGridNg2 } from 'ag-grid-angular';\nimport { ActionParentComponent } from 'src/app/utils/action.parent.component';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from 'src/app/core/constants';\nimport { resetCompiledComponents } from '@angular/core/src/render3/jit/module';\n\n@Component({\n    selector: 'app-employee-list',\n    templateUrl: 'employee.list.component.html'\n})\n\nexport class EmployeeListComponent implements OnInit {\n\n    @ViewChild('agGrid') agGrid: AgGridNg2;\n    public context = {};\n    gridOptions = { rowHeight: 50 };\n\n    columnDefs = [\n        { headerName: 'Image', field: '', cellRenderer: this.customCellRendererFunc },\n        { headerName: 'Employee Name', field: 'fullName' },\n        { headerName: 'Email ID', field: 'email' },\n        { headerName: 'Mobile Number', field: 'mobileNumber' },\n        { headerName: 'Address', field: 'address' },\n        {\n            headerName: 'Action', field: 'name',\n            cellRendererFramework: ActionParentComponent,\n        }\n    ];\n\n    rowData: any;\n    constructor(private employeeService: EmployeeService,\n        private toastrService: ToastrService) {\n        this.context = { componentParent: this };\n    }\n\n    ngOnInit() {\n        this.getEmployeeList();\n    }\n\n    public getEmployeeList() {\n        this.employeeService.getEmployeeList()\n            .subscribe((response: any) => {\n                if (response.status)\n                    this.rowData = new Promise((resolve, reject) =>\n                        resolve(response.data)\n                    );\n            }, error => {\n                this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n            });\n    }\n\n    onGridReady(data) {\n    }\n\n    getSelectedRows() {\n        const selectedNodes = this.agGrid.api.getSelectedNodes();\n        const selectedData = selectedNodes.map(node => node.data);\n        const selectedDataStringPresentation = selectedData.map(node => node.make + ' ' + node.model).join(', ');\n        alert(`Selected nodes: ${selectedDataStringPresentation}`);\n    }\n\n    onCellClicked(row) {\n        //alert('double clicked on ' + row.data.make);\n    }\n    onCellDoubleClicked(row) {\n        alert('double clicked on ' + row.data.make);\n    }\n\n    public customCellRendererFunc(params): string {\n        return ``;\n    }\n\n    public onViewClicked(cell: any): void {\n        alert(\"View Employee \" + JSON.stringify(cell.data));\n    }\n\n    public onEditClicked(cell: any): void {\n        alert(\"Edit Employee \" + JSON.stringify(cell.data));\n    }\n\n    public onDeleteClicked(cell: any): void {\n        alert(\"Delete Employee \" + JSON.stringify(cell.data));\n    }\n\n\n\n}\n    \n\n    \n        \n    Employees\n    \n         Home\n        Employees\n    \n\n\n    \n        \n            Employee List\n            Get Selected Rows -->\n        \n        \n            \n            \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Employees             Home        Employees                            Employee List            Get Selected Rows -->                                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nActionComponent->EmployeeModule\n\n\n\n\n\nActionParentComponent\n\nActionParentComponent\n\nEmployeeModule -->\n\nActionParentComponent->EmployeeModule\n\n\n\n\n\nEmployeeListComponent\n\nEmployeeListComponent\n\nEmployeeModule -->\n\nEmployeeListComponent->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/employees/employees.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            ActionParentComponent\n                        \n                        \n                            EmployeeListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ActionParentComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EmployeeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee.list.component';\nimport { CommonModule } from '@angular/common';\nimport { ActionComponent } from 'src/app/utils/action.component';\nimport { ActionParentComponent } from 'src/app/utils/action.parent.component';\nimport { EmployeeService } from 'src/app/core/services/employee.service';\n\nconst routes: Routes = [{ path: '', component: EmployeeListComponent, data: { title: 'Employees' } }]\n\n@NgModule({\n    entryComponents: [ActionParentComponent],\n    declarations: [EmployeeListComponent, ActionComponent, ActionParentComponent],\n    imports: [\n        CommonModule,\n        AgGridModule.withComponents([]),\n        RouterModule,\n        RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [ActionComponent, ActionParentComponent, EmployeeService]\n\n})\nexport class EmployeeModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/employee.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmployeeList\n                            \n                            \n                                    Public\n                                getUserDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: Api)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/employee.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        Api\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmployeeList\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmployeeList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/employee.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserDetail(userId: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/employee.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Api } from '../providers/api';\n\n\n\n@Injectable()\nexport class EmployeeService {\n\n    constructor(private api: Api) { }\n\n    getEmployeeList() {\n        return this.api.get(\"employees\");\n    }\n\n    public getUserDetail(userId: String) {\n        return this.api.get(\"employees/\" + userId);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html'\n})\n\nexport class FooterComponent {\n\n}\n    \n\n    \n        \n\n  \n    Version 2.4.0\n  \n  Copyright &copy; 2014-2016 Almsaeed Studio. All rights\n  reserved.\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Version 2.4.0    Copyright © 2014-2016 Almsaeed Studio. All rights  reserved.'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forgotPasswordGroup\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRecoverPasswordClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, router: Router, fb: FormBuilder, toastrService: ToastrService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onRecoverPasswordClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onRecoverPasswordClicked(forgotPasswordGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forgotPasswordGroup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forgotPasswordGroup\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { onSubmitFormGroup } from 'src/app/utils/on-submit-form';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Constants } from 'src/app/core/constants';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html'\n})\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\n\n  public forgotPasswordGroup;\n  private subscription: Subscription;\n\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastrService: ToastrService,\n    private authService: AuthService) {\n\n    this.forgotPasswordGroup = this.fb.group({\n      email: new FormControl('',\n        [Validators.required, Validators.email])\n    });\n  }\n\n  get email() {\n    return this.forgotPasswordGroup.get('email');\n  }\n\n  ngOnInit() {\n    this.document.body.className = \"hold-transition login-page\";\n  }\n\n  public onRecoverPasswordClicked(forgotPasswordGroup) {\n    let user = forgotPasswordGroup.value;\n    console.log(user);\n    if (forgotPasswordGroup.invalid) {\n      onSubmitFormGroup(forgotPasswordGroup)\n      this.toastrService.error('Please enter email ID', Constants.TITLE_ERROR);\n      return;\n    }\n\n    this.subscription = this.authService.forgotPassword({email : user.email}\n    ).subscribe((response: any) => {\n      console.log(response);\n      if (response.status) {\n        this.toastrService.success(response.message, Constants.TITLE_SUCCESS);\n        this.forgotPasswordGroup.reset();        \n      } else {\n        this.toastrService.error(response.message, Constants.TITLE_ERROR);\n      }\n    }, (error: HttpErrorResponse) => {\n      console.log(error);\n      this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n    });\n    //this.router.navigate([\"/login\"]);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription != null && this.subscription !== undefined)\n      this.subscription.unsubscribe();\n  }\n}\n    \n\n    \n        \n    \n        \n            AdminLTE\n        \n        \n            \n                Recover your password\n                \n                    \n                    \n\n                    \n                            Please enter emailID\n                            Please enter valid emailID\n                            Please enter valid emailID\n                        \n                \n                \n                    Recover\n                        Password\n                    \n                \n                \n                    Already having account\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        AdminLTE                                            Recover your password                                                                                                        Please enter emailID                            Please enter valid emailID                            Please enter valid emailID                                                                            Recover                        Password                                                                        Already having account                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullName\n                            \n                            \n                                    Public\n                                profilePicture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrlProvider: BaseUrlProvider, sessionService: SessionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrlProvider\n                                                  \n                                                        \n                                                                        BaseUrlProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/header/header.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profilePicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { BaseUrlProvider } from 'src/app/core/providers/base.url.provider';\nimport { SessionService } from 'src/app/core/services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html'\n})\n\nexport class HeaderComponent {\n\n    public profilePicture: string = '';\n    public fullName: string;\n\n    constructor(private baseUrlProvider: BaseUrlProvider,\n        private sessionService: SessionService,\n        private router: Router) {\n        this.fullName = sessionService.getFullName();\n        this.profilePicture = baseUrlProvider.profilePictureBaseUrl + sessionService.getProfilePic();\n    }\n\n    public logOut() {\n        this.sessionService.logOut();\n        this.router.navigate(['/login']);\n    }\n}\n    \n\n    \n        \n  \n    \n    ALT\n    \n    AdminLTE\n  \n  \n  \n    \n      Toggle navigation\n    \n\n    \n      \n        \n          \n            \n            {{fullName}}\n          \n          \n            \n              \n              {{fullName}}\n            \n            \n              \n                Profile\n              \n              \n                Sign out\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          ALT        AdminLTE                Toggle navigation                                                        {{fullName}}                                                            {{fullName}}                                                      Profile                                            Sign out                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTUtils.html":{"url":"injectables/JWTUtils.html","title":"injectable - JWTUtils","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JWTUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/jwt.utils.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeJwt\n                            \n                            \n                                    Public\n                                parseJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            decodeJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeJwt(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.utils.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseJwt(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/jwt.utils.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * @version 1.0.0\n * @description JWTUtils for encode, decode and verify JWT\n */\n@Injectable()\nexport class JWTUtils {\n  \n    /**\n     * @description decoding valid JWT\n     * @param token \n     */\n    public decodeJwt(token: string) {\n      let decodedToken = this.parseJwt(token);\n        return decodedToken;\n    }\n\n    public parseJwt(token) {\n        if (token != null || token != undefined) {\n            var base64Url = token.split('.')[1];\n            var base64 = base64Url.replace('-', '+').replace('_', '/');\n            return JSON.parse(window.atob(base64));\n        }\n        return null;\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadScript\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadScript\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/layout.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/layout.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, AfterViewInit, AfterViewChecked } from \"@angular/core\";\nimport { DOCUMENT } from '@angular/platform-browser';\n\nimport * as $ from 'jquery';\ndeclare var jQuery:any;\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './layout.component.html'\n})\n\nexport class LayoutComponent implements OnInit{\n\n    constructor(@Inject(DOCUMENT) private document: Document) {\n    }\n\n    ngOnInit() {\n        this.document.body.className = \"hold-transition skin-blue sidebar-mini\";        \n        this.loadScript();\n    }\n\n    public loadScript(){\n        let script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src= \"assets/dist/js/app.min.js\";\n        document.getElementsByTagName('head')[0].appendChild(script);\n    }\n}\n    \n\n    \n        \n    \n    \n    \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_bootstrap\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nLayoutModule -->\n\nSidebarComponent->LayoutModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            LayoutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { HeaderComponent } from \"../shared/header/header.component\";\nimport { SidebarComponent } from \"../shared/sidebar/sidebar.component\";\nimport { FooterComponent } from \"../shared/footer/footer.component\";\nimport { LayoutComponent } from './layout.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from '../core/guards/auth.guard';\nimport { BlockUIHttpModule } from 'ng-block-ui/http';\nimport { BlockUIModule } from 'ng-block-ui';\n\nconst routes: Routes = [\n    // { path: '', redirectTo: '/layout', pathMatch: 'full', data: { title: 'Layout' } },\n    {\n        path: 'layout', component: LayoutComponent, canActivateChild: [AuthGuard],\n        children:\n            [\n                { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n                { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule' },\n                { path: 'employees', loadChildren: './employees/employees.module#EmployeeModule' },\n                { path: 'profile', loadChildren: './profile/profile.module#ProfileModule' }\n            ]\n    },\n    { path: '**', redirectTo: '/layout', pathMatch: 'full' }\n]\n\n@NgModule({\n    declarations: [HeaderComponent, SidebarComponent, FooterComponent, LayoutComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule,\n        RouterModule.forChild(routes),\n        BlockUIModule.forRoot(), // Import BlockUIModule\n        BlockUIHttpModule.forRoot(), // Import Block UI Http Module\n    ],\n    exports: [RouterModule],\n    providers: [AuthGuard],\n    bootstrap: [LayoutComponent]\n})\nexport class LayoutModule {\n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginFormGroup\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLoginClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    rememberMe\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, router: Router, fb: FormBuilder, toastrService: ToastrService, authService: AuthService, sessionService: SessionService, jwt: JWTUtils)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                        JWTUtils\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoginClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoginClicked(loginFormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginFormGroup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginFormGroup\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : { fullName: '', email: '', password: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rememberMe\n                    \n                \n\n                \n                    \n                        getrememberMe()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:58\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { User } from 'src/app/models/user.model';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { onSubmitFormGroup } from 'src/app/utils/on-submit-form';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { SessionService } from 'src/app/core/services/session.service';\nimport { Constants } from 'src/app/core/constants';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { JWTUtils } from 'src/app/core/services/jwt.utils';\n\n/**\n * variable to hold reference of jquery instance\n */\ndeclare const jQuery: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private user: User = { fullName: '', email: '', password: '' };\n  public loginFormGroup;\n  private subscription: Subscription;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastrService: ToastrService,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private jwt: JWTUtils\n  ) {\n    this.loginFormGroup = this.fb.group({\n      email: new FormControl('',\n        [Validators.required, Validators.pattern(/^[0-9a-zA-z]+[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.[a-zA-Z.]{2,5}$/)]),\n      password: new FormControl('', [Validators.required]),\n      rememberMe: new FormControl(false)\n    });\n  }\n\n  ngOnInit() {\n    this.document.body.className = \"hold-transition login-page\";\n  }\n\n  get email() {\n    return this.loginFormGroup.get('email');\n  }\n  get password() {\n    return this.loginFormGroup.get('password');\n  }\n  get rememberMe() {\n    return this.loginFormGroup.get('rememberMe');\n  }\n\n  public onLoginClicked(loginFormGroup) {\n    let user = loginFormGroup.value;\n    //console.log(user);\n\n    if (loginFormGroup.invalid) {\n      onSubmitFormGroup(loginFormGroup);\n      this.toastrService.error('Please enter email ID and password', Constants.TITLE_ERROR);\n      return;\n    }\n\n    //this.router.navigate([\"/layout/dashboard\"]);\n\n    this.subscription = this.authService.login(user\n    ).subscribe((response: any) => {\n      //this.router.navigate([\"/layout/dashboard\"]);\n      if (response.status) {\n        jQuery('#loginModal').modal('hide');\n\n        this.sessionService.setUserID(response.data.userId);\n        this.sessionService.setFullName(`${response.data.fullName}`);\n        this.sessionService.setProfilePic(response.data.image);\n        this.sessionService.setEmail(response.data.email);\n\n        this.router.navigate([\"/layout/dashboard\"]);\n        this.toastrService.success(response.message, Constants.TITLE_SUCCESS);\n      } else {\n        this.toastrService.error(response.message, Constants.TITLE_ERROR);\n      }\n    }, (error: HttpErrorResponse) => {\n      this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription != null && this.subscription !== undefined)\n      this.subscription.unsubscribe();\n  }\n}\n    \n\n    \n        \n    \n        \n            AdminLTE v3\n        \n        \n                \n                    Sign in to start your session\n                    \n                        \n                        \n\n                        \n                            Please enter emailID\n                            Please enter valid emailID\n                        \n                    \n                    \n                        \n                        \n\n                        \n                            Please enter password\n                        \n                    \n                    \n                         Remember Me\n                    \n                    \n                        Sign\n                            In\n                        \n                    \n                    \n                        Forgot Password?\n                    \n\n                    \n                        Register a new membership\n                    \n                \n            \n\n         Modal  -->\n    \n\n\n    \n        \n            \n                 Login Modal\n            \n            \n                \n                    \n                        Sign in to start your session\n                        \n                            \n                            \n\n                            \n                                Please enter emailID\n                                Please enter valid emailID\n                            \n                        \n                        \n                            \n                            \n\n                            \n                                Please enter password\n                            \n                        \n                        \n                             Remember Me\n                        \n                        \n                            Sign\n                                In\n                            \n                        \n                        \n                            Forgot Password?\n                        \n\n                        \n                            Register a new membership\n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        AdminLTE v3                                                    Sign in to start your session                                                                                                                        Please enter emailID                            Please enter valid emailID                                                                                                                                                                    Please enter password                                                                                         Remember Me                                                                Sign                            In                                                                                        Forgot Password?                                                                Register a new membership                                                         Modal  -->                                             Login Modal                                                                                    Sign in to start your session                                                                                                                                            Please enter emailID                                Please enter valid emailID                                                                                                                                                                                                Please enter password                                                                                                         Remember Me                                                                            Sign                                In                                                                                                        Forgot Password?                                                                            Register a new membership                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nCompanyProfileComponent\n\nCompanyProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nCompanyProfileComponent->ProfileModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CompanyProfileComponent\n                        \n                        \n                            UpdatePasswordComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { WebcamModule } from 'ngx-webcam';\nimport { CommonModule } from '@angular/common';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserProfileComponent } from './user/user-profile.component';\nimport { CompanyProfileComponent } from './company/company-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'user', pathMatch: 'full' },\n    { path: 'user', component: UserProfileComponent, data: { title: 'User Profile' } },\n    { path: 'company', component: CompanyProfileComponent, data: { title: 'Company Profile' } },\n    { path: 'update-password', component: UpdatePasswordComponent, data: { title: 'Update Password' } }\n]\n\n@NgModule({\n    declarations: [UserProfileComponent, CompanyProfileComponent, UpdatePasswordComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        RouterModule.forChild(routes),\n        WebcamModule],\n    exports: [RouterModule]\n})\nexport class ProfileModule {\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Public\n                                countries\n                            \n                            \n                                    Public\n                                registerFormGroup\n                            \n                            \n                                    Public\n                                states\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountryList\n                            \n                            \n                                    Public\n                                getStateList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    email\n                                \n                                \n                                    country\n                                \n                                \n                                    state\n                                \n                                \n                                    city\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    agreeTerms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, router: Router, fb: FormBuilder, toastrService: ToastrService, authService: AuthService, sessionService: SessionService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register/register.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(state: State)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                State\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountryList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountryList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStateList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStateList(country: Country)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    country\n                                    \n                                                Country\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onRegister(registerFormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerFormGroup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         City[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerFormGroup\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n\n                \n                    \n                        getcity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        agreeTerms\n                    \n                \n\n                \n                    \n                        getagreeTerms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register/register.component.ts:74\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { onSubmitFormGroup } from 'src/app/utils/on-submit-form';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { SessionService } from 'src/app/core/services/session.service';\nimport { Constants } from 'src/app/core/constants';\nimport { CommonService } from 'src/app/core/services/common.service';\nimport { City } from 'src/app/models/city.model';\nimport { State } from 'src/app/models/state.model';\nimport { CommonResponse } from 'src/app/models/common.response';\nimport { Country } from 'src/app/models/country.model';\nimport { UserRole } from 'src/app/models/user.role';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  public registerFormGroup;\n  private subscription: Subscription;\n\n  public countries: Country[];\n  public states: State[];\n  public cities: City[];\n\n  constructor(@Inject(DOCUMENT) private document: Document,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastrService: ToastrService,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private commonService: CommonService) {\n\n    this.registerFormGroup = this.fb.group({\n      fullName: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z -]+$/)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(/^[0-9a-zA-z]+[a-zA-Z0-9._]+@[a-zA-Z0-9]+\\.[a-zA-Z.]{2,5}$/)]),\n      country: new FormControl('', [Validators.required]),\n      state: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required]),\n      agreeTerms: new FormControl(false, [Validators.required])\n    });\n  }\n\n  get fullName(): FormControl {\n    return this.registerFormGroup.get('fullName');\n  }\n  get email() {\n    return this.registerFormGroup.get('email');\n  }\n  get country() {\n    return this.registerFormGroup.get('country');\n  }\n  get state() {\n    return this.registerFormGroup.get('state');\n  }\n  get city() {\n    return this.registerFormGroup.get('city');\n  }\n  get password() {\n    return this.registerFormGroup.get('password');\n  }\n  get confirmPassword() {\n    return this.registerFormGroup.get('confirmPassword');\n  }\n  get agreeTerms() {\n    return this.registerFormGroup.get('agreeTerms');\n  }\n\n  ngOnInit() {\n    this.document.body.className = \"hold-transition register-page\";\n    this.getCountryList();\n  }\n\n  public getCountryList() {\n    this.subscription = this.commonService.getCountryList()\n      .subscribe((response: CommonResponse) => {\n        if (response.status) {\n          this.countries = response.data;\n        }\n        else {\n          this.toastrService.error(response.message, Constants.TITLE_ERROR);\n        }\n      }, error => {\n        this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n      })\n  }\n\n  public getStateList(country: Country) {\n    this.subscription = this.commonService.getStateList(country.countryId)\n      .subscribe((response: CommonResponse) => {\n        if (response.status) {\n          this.states = response.data;\n        }\n        else {\n          this.toastrService.error(response.message, Constants.TITLE_ERROR);\n        }\n      }, error => {\n        this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n      })\n  }\n\n  public getCityList(state: State) {\n    this.subscription = this.commonService.getCityList(state.stateId)\n      .subscribe((response: CommonResponse) => {\n        if (response.status) {\n          this.cities = response.data;\n        }\n        else {\n          this.toastrService.error(response.message, Constants.TITLE_ERROR);\n        }\n      }, error => {\n        this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n      })\n  }\n\n  public onRegister(registerFormGroup) {\n    let user = registerFormGroup.value;\n    if (registerFormGroup.invalid) {\n      onSubmitFormGroup(registerFormGroup);\n      this.toastrService.error('Please fill all the fields are mandatory', Constants.TITLE_ERROR);\n      return;\n    }\n\n    console.log(user);\n    user.role = UserRole.EMPLOYEE;\n\n    this.subscription = this.authService.register(user\n    ).subscribe((response: any) => {\n      console.log(response);\n      if (response.status) {\n        this.sessionService.setUserID(response.data.userId);\n        this.sessionService.setFullName(`${response.data.fullName}`);\n        this.sessionService.setProfilePic(response.data.image);\n        this.sessionService.setEmail(response.data.email);\n\n        \n        this.router.navigate([\"/layout/dashboard\"]);\n        this.toastrService.success(response.message, Constants.TITLE_SUCCESS);\n      } else {\n        this.toastrService.error(response.message, Constants.TITLE_ERROR);\n      }\n    }, (error: HttpErrorResponse) => {\n      console.log(error);\n      this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription != null && this.subscription !== undefined)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    AdminLTE\n  \n\n  \n    Register a new membership\n\n    \n      \n        \n        \n\n        \n          Please enter full name\n          Full name be in characters only\n        \n      \n      \n        \n        \n\n        \n          Please enter emailID\n          Please enter valid emailID\n        \n      \n\n      \n        \n           Select Country \n          {{country.countryName}}\n        \n        \n\n        \n          Please select state\n        \n      \n\n      \n        \n           Select State \n          {{state.stateName}}\n        \n        \n\n        \n          Please select state\n        \n      \n\n      \n        \n           Select City \n          {{city.cityName}}\n        \n        \n\n        \n          Please select city\n        \n      \n\n\n      \n        \n        \n\n        \n          Please enter password\n        \n      \n      \n        \n        \n\n        \n          Please enter confirm password\n        \n      \n      \n         I agree to the terms\n\n        \n          Please enter agree terms and conditions\n        \n\n      \n      \n        Register\n      \n    \n    I already have a membership\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      AdminLTE        Register a new membership                                            Please enter full name          Full name be in characters only                                                      Please enter emailID          Please enter valid emailID                                       Select Country           {{country.countryName}}                                  Please select state                                       Select State           {{state.stateName}}                                  Please select state                                       Select City           {{city.cityName}}                                  Please select city                                                      Please enter password                                                      Please enter confirm password                             I agree to the terms                  Please enter agree terms and conditions                            Register              I already have a membership  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                EMAIL_KEY\n                            \n                            \n                                    Private\n                                FULLNAME_KEY\n                            \n                            \n                                    Private\n                                JWT_TOKEN_KEY\n                            \n                            \n                                    Private\n                                PROFILE_PIC_KEY\n                            \n                            \n                                    Private\n                                USERID_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getEmail\n                            \n                            \n                                    Public\n                                getFullName\n                            \n                            \n                                    Public\n                                getProfilePic\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                getUserID\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                setEmail\n                            \n                            \n                                    Public\n                                setFullName\n                            \n                            \n                                    Public\n                                setProfilePic\n                            \n                            \n                                    Public\n                                setToken\n                            \n                            \n                                    Public\n                                setUserID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFullName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProfilePic\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilePic()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEmail(email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFullName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFullName(fullName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fullName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProfilePic\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProfilePic(profilePic)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profilePic\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUserID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserID(userID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/session.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            EMAIL_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'EMAIL_KEY'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            FULLNAME_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FULLNAME_KEY'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            JWT_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'JWT_TOKEN_KEY'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            PROFILE_PIC_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'PROFILE_PIC_KEY'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            USERID_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USERID_KEY'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\n@Injectable()\nexport class SessionService {\n    private USERID_KEY = 'USERID_KEY';\n    private EMAIL_KEY = 'EMAIL_KEY';\n    private FULLNAME_KEY = 'FULLNAME_KEY';\n    private PROFILE_PIC_KEY = 'PROFILE_PIC_KEY';\n    private JWT_TOKEN_KEY = 'JWT_TOKEN_KEY';\n\n    \n\n    public getUserID() {\n        return localStorage.getItem(this.USERID_KEY);\n    }\n    public setUserID(userID) {\n        localStorage.setItem(this.USERID_KEY, userID);\n    }\n\n    public getFullName() {\n        return localStorage.getItem(this.FULLNAME_KEY);\n    }\n    public setFullName(fullName) {\n        localStorage.setItem(this.FULLNAME_KEY, fullName);\n    }\n\n    public getProfilePic() {\n        return localStorage.getItem(this.PROFILE_PIC_KEY);\n    }\n\n    public setProfilePic(profilePic) {\n        localStorage.setItem(this.PROFILE_PIC_KEY, profilePic);\n    }\n\n    public getToken() {\n        return localStorage.getItem(this.JWT_TOKEN_KEY);\n    }\n    \n    public setToken(token) {\n        localStorage.setItem(this.JWT_TOKEN_KEY, token);\n    }\n\n    public getEmail() {\n        return localStorage.getItem(this.EMAIL_KEY);\n    }\n    \n    public setEmail(email) {\n        localStorage.setItem(this.EMAIL_KEY, email);\n    }\n\n    public logOut() {\n        localStorage.setItem(this.USERID_KEY, null);\n        localStorage.setItem(this.FULLNAME_KEY, null);\n        localStorage.setItem(this.PROFILE_PIC_KEY, null);\n        localStorage.setItem(this.EMAIL_KEY, null);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sidebar/sidebar.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnInit, AfterContentInit } from \"@angular/core\";\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html'\n})\n\nexport class SidebarComponent implements OnInit {\n\n    ngOnInit() {\n        $(document).ready(() => {\n            const trees: any = $('[data-widget=\"tree\"]');\n            trees.tree();\n        });\n\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Pravin P Patil\n         Software Developer\n      \n     -->\n    \n      \n        \n           Dashboard\n        \n      \n      \n        \n           Employees\n        \n      \n\n      \n        \n            User Profile\n        \n      \n      \n        \n            Company Profile\n        \n      \n\n      \n        \n            Update Password\n        \n      \n       Log Out\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Pravin P Patil         Software Developer           -->                             Dashboard                                       Employees                                        User Profile                                        Company Profile                                        Update Password                     Log Out      '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/state.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        stateCode\n                                \n                                \n                                        stateId\n                                \n                                \n                                        stateName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         Country\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Country\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateCode\n                                    \n                                \n                                \n                                    \n                                        stateCode:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateId\n                                    \n                                \n                                \n                                    \n                                        stateId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateName\n                                    \n                                \n                                \n                                    \n                                        stateName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Country } from './country.model';\n\nexport interface State {   \n    stateId: Number;\n    stateName: String;\n    stateCode? : String;    \n    country?: Country;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatusDirective.html":{"url":"directives/StatusDirective.html","title":"directive - StatusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/directives/status.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [status]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                statusColors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColorCode\n                            \n                            \n                                    Public\n                                highlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, titlecase: TitleCasePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/directives/status.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titlecase\n                                                  \n                                                        \n                                                                        TitleCasePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/status.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/status.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/directives/status.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            change\n                        \n                        \n                    \n                \n            \n            \n                \nchange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/directives/status.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getColorCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorCode(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/directives/status.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            highlight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    highlight(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/directives/status.directive.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusColors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        { status: 'APPROVED', color: 'orange' },\n        { status: 'REJECTED', color: 'red' },\n        { status: 'DONE', color: 'green' }\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/directives/status.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, Renderer2, HostListener } from '@angular/core';\nimport { TitleCasePipe } from '@angular/common';\n\n@Directive({\n    selector: '[status]'       \n})\nexport class StatusDirective {\n    @Input()\n    private status: string;\n    @Input()\n    private text: string;\n    @Input()\n    private disabled: boolean = false;\n\n    private statusColors = [\n        { status: 'APPROVED', color: 'orange' },\n        { status: 'REJECTED', color: 'red' },\n        { status: 'DONE', color: 'green' }\n    ];\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private titlecase: TitleCasePipe) {\n        this.highlight(this.status);\n    }\n\n\n    @HostListener('change') ngOnChanges() {\n        this.highlight(this.status);\n    }\n\n    public highlight(status : string) {\n        this.el.nativeElement.innerHTML = this.titlecase.transform(this.text);\n        \n        this.renderer.setStyle(this.el.nativeElement, 'background-color', this.getColorCode(status));\n        this.renderer.setStyle(this.el.nativeElement, 'color', 'white');\n        this.renderer.setStyle(this.el.nativeElement, 'padding', '5px');\n        this.renderer.setStyle(this.el.nativeElement, 'padding-left', '10px');\n        this.renderer.setStyle(this.el.nativeElement, 'padding-right', '10px');\n        this.renderer.setStyle(this.el.nativeElement, 'border-radius', '15px');\n        this.renderer.setStyle(this.el.nativeElement, 'cursor', 'pointer');\n        this.renderer.setAttribute(this.el.nativeElement, 'class', 'disabled');\n        if (this.disabled) {\n            this.renderer.setStyle(this.el.nativeElement, 'cursor', 'not-allowed');\n            this.renderer.setStyle(this.el.nativeElement, 'color', 'gray');\n        }\n    }\n\n    public getColorCode(status: string): string {\n        let obj = this.statusColors.filter(item => item.status == status);\n        if (obj.length >= 1)\n            return obj[0].color;\n        return 'gray';\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestingComponent.html":{"url":"components/TestingComponent.html","title":"component - TestingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/dashboard/test.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test\n            \n\n\n\n            \n                template\n                testing comp\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n    selector:'app-test',\n    template:'testing comp'\n})\n\nexport class TestingComponent{\n    \n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'testing comp'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenInterceptor.html":{"url":"classes/TokenInterceptor.html","title":"class - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/token.interceptor.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HttpInterceptor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionService\n\n                        \n                    \n                    \n                        \n                            Default value : new SessionService()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interceptors/token.interceptor.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/token.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SessionService } from '../services/session.service';\n\nexport class TokenInterceptor implements HttpInterceptor {\n  public auth: SessionService = new SessionService();\n    \n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    \n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/profile/update-password/update-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Public\n                                updatePasswordFormGroup\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onUpdatePasswordClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    password\n                                \n                                \n                                    newPassword\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, sessionService: SessionService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/profile/update-password/update-password.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/update-password/update-password.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/update-password/update-password.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onUpdatePasswordClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onUpdatePasswordClicked(updatePasswordFormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/profile/update-password/update-password.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updatePasswordFormGroup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updatePasswordFormGroup\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : { fullName: '', email: 'admin@gmail.com', password: '', newPassword: '' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        newPassword\n                    \n                \n\n                \n                    \n                        getnewPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/layout/profile/update-password/update-password.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { User } from 'src/app/models/user.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CustomValidators } from 'src/app/core/validators/custom.validators';\nimport { onSubmitFormGroup } from 'src/app/utils/on-submit-form';\nimport { SessionService } from 'src/app/core/services/session.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Constants } from 'src/app/core/constants';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html'\n})\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\n  private user: User = { fullName: '', email: 'admin@gmail.com', password: '', newPassword: '' };\n  private subscription: Subscription;\n\n  public updatePasswordFormGroup;\n  constructor(private toastrService: ToastrService,\n    private sessionService: SessionService,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.updatePasswordFormGroup = new FormGroup({\n      fullName: new FormControl({ value: this.sessionService.getFullName(), disabled: true }),\n      password: new FormControl('', [Validators.required]),\n      newPassword: new FormControl('', [Validators.required, CustomValidators.validatePasswordPolicy]),\n      confirmPassword: new FormControl('', [Validators.required])\n    }, { validators: CustomValidators.confirmPassword });\n\n  }\n\n  get fullName(): FormControl {\n    return this.updatePasswordFormGroup.get('fullName');\n  }\n  get password(): FormControl {\n    return this.updatePasswordFormGroup.get('password');\n  }\n  get newPassword(): FormControl {\n    return this.updatePasswordFormGroup.get('newPassword');\n  }\n  get confirmPassword(): FormControl {\n    return this.updatePasswordFormGroup.get('confirmPassword');\n  }\n\n  public onUpdatePasswordClicked(updatePasswordFormGroup) {\n    if (updatePasswordFormGroup.invalid) {\n      onSubmitFormGroup(updatePasswordFormGroup);\n      return;\n    }\n    let user = updatePasswordFormGroup.value;\n    user.userId = this.sessionService.getUserID();\n    console.log(user);\n    this.subscription = this.authService.updatePassword(user\n    ).subscribe((response: any) => {\n      if (response.status) {\n        updatePasswordFormGroup.reset();\n        this.fullName.setValue(this.sessionService.getFullName());\n        this.toastrService.success('Passsword updated successfully', 'Success');\n      }\n    }, (error: HttpErrorResponse) => {\n      this.toastrService.error(error.error.message, Constants.TITLE_ERROR);\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.subscription != null && this.subscription !== undefined)\n      this.subscription.unsubscribe();\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                Update Password\n            \n            \n                \n                    \n                        \n                            \n                            \n\n                            \n                                Please enter full name\n                            \n                        \n                        \n                            \n\n                            \n                            \n                                Please enter password\n                            \n                        \n\n                        \n                            \n\n                            \n                            \n                                Please enter new password\n                                Please enter valid new password\n                            \n                        \n\n                        \n                            \n\n                            \n                            \n                                Please enter confirm password\n                                Mismatch confirm password & password\n                            \n                        \n                        \n                            \n                                Update\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Update Password                                                                                                                                                                                                        Please enter full name                                                                                                                                                                                                Please enter password                                                                                                                                                                                                Please enter new password                                Please enter valid new password                                                                                                                                                                                                Please enter confirm password                                Mismatch confirm password & password                                                                                                                                        Update                                                                                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'ag-clickable'},{'name': 'ActionParentComponent', 'selector': 'clickable-cell'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth-component'},{'name': 'CompanyProfileComponent', 'selector': 'app-profile-company'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EmployeeListComponent', 'selector': 'app-employee-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TestingComponent', 'selector': 'app-test'},{'name': 'UpdatePasswordComponent', 'selector': 'app-update-password'},{'name': 'UserProfileComponent', 'selector': 'app-profile-user'}];\n    var DIRECTIVES = [{'name': 'StatusDirective', 'selector': '[status]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        dateOfBirth\n                                \n                                \n                                        email\n                                \n                                \n                                        fullName\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                            Optional\n                                        mobileNumber\n                                \n                                \n                                            Optional\n                                        newPassword\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        remember\n                                \n                                \n                                            Optional\n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileNumber\n                                    \n                                \n                                \n                                    \n                                        mobileNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remember\n                                    \n                                \n                                \n                                    \n                                        remember:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from './user.role';\n\nexport interface User {\n    fullName: string;\n    email: string;\n    password?: string;\n    newPassword?: string;\n    dateOfBirth?: string;\n    mobileNumber?: string;\n    address?: string;\n    remember?: boolean;\n    image?: string;\n    role?: UserRole;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRole.html":{"url":"classes/UserRole.html","title":"class - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.role.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                EMPLOYEE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ADMIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"ADMIN\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.role.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            EMPLOYEE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"EMPLOYEE\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.role.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserRole{\n    public static readonly ADMIN : String = \"ADMIN\";\n    public static readonly EMPLOYEE : String = \"EMPLOYEE\";\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: Api)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        Api\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Api } from '../providers/api';\nimport { User } from 'src/app/models/user.model';\n\n\n@Injectable()\nexport class UserService {\n    constructor(private api: Api) { }\n\n    public updateUser(user: User) {\n        return this.api.post(\"users\", user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            variable\n            jQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/core/constants.ts\n            \n            class\n            Constants\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/directives/status.directive.ts\n            \n            directive\n            StatusDirective\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/token.interceptor.ts\n            \n            class\n            TokenInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/providers/api.ts\n            \n            injectable\n            Api\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/core/providers/base.url.provider.ts\n            \n            injectable\n            BaseUrlProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/jwt.utils.ts\n            \n            injectable\n            JWTUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/address.validator.ts\n            \n            function\n            addressValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/confirm-password.validator.ts\n            \n            function\n            confirmPasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/custom.validators.ts\n            \n            class\n            CustomValidators\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/validators/full-name.validator.ts\n            \n            function\n            fullNameValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/mobile-number.validator.ts\n            \n            function\n            mobileNumberValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/valid-password.policy.validator.ts\n            \n            function\n            ValidatePasswordPolicy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layout/dashboard/test.component.ts\n            \n            component\n            TestingComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/employees/employee.list.component.ts\n            \n            component\n            EmployeeListComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/layout.component.ts\n            \n            variable\n            jQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/profile/company/company-profile.component.ts\n            \n            component\n            CompanyProfileComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/layout/profile/update-password/update-password.component.ts\n            \n            component\n            UpdatePasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/layout/profile/user/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/models/city.model.ts\n            \n            interface\n            City\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/common.response.ts\n            \n            class\n            CommonResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/company.model.ts\n            \n            interface\n            Company\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/country.model.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/state.model.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/user.role.ts\n            \n            class\n            UserRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/action.component.ts\n            \n            component\n            ActionComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/utils/action.parent.component.ts\n            \n            component\n            ActionParentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/utils/on-submit-form.ts\n            \n            function\n            onSubmitFormGroup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.1.4\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/pwa : ^0.12.0\n        \n            @angular/router : ~7.2.0\n        \n            @angular/service-worker : ~7.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.1\n        \n            ag-grid : ^18.1.2\n        \n            ag-grid-angular : ^19.1.2\n        \n            ag-grid-community : ^19.1.4\n        \n            core-js : ^2.5.4\n        \n            cors : ^2.8.5\n        \n            i : ^0.3.6\n        \n            jquery : ^3.3.1\n        \n            jquery-ui-dist : ^1.12.1\n        \n            moment : ^2.24.0\n        \n            ng-block-ui : ^2.1.0\n        \n            ng-keyboard-shortcuts : ^6.1.1\n        \n            ngx-toastr : ^9.1.1\n        \n            ngx-webcam : ^0.2.0\n        \n            nodemon : ^1.19.3\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addressValidator   (src/.../address.validator.ts)\n                        \n                        \n                            confirmPasswordValidator   (src/.../confirm-password.validator.ts)\n                        \n                        \n                            fullNameValidator   (src/.../full-name.validator.ts)\n                        \n                        \n                            mobileNumberValidator   (src/.../mobile-number.validator.ts)\n                        \n                        \n                            onSubmitFormGroup   (src/.../on-submit-form.ts)\n                        \n                        \n                            ValidatePasswordPolicy   (src/.../valid-password.policy.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/address.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addressValidator\n                        \n                        \n                    \n                \n            \n            \n                \naddressValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/core/validators/confirm-password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            confirmPasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmPasswordValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/core/validators/full-name.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fullNameValidator\n                        \n                        \n                    \n                \n            \n            \n                \nfullNameValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/core/validators/mobile-number.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mobileNumberValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmobileNumberValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/utils/on-submit-form.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            onSubmitFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmitFormGroup(formGroup)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/validators/valid-password.policy.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ValidatePasswordPolicy\n                        \n                        \n                    \n                \n            \n            \n                \nValidatePasswordPolicy(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAdminLte\nVersion 7.1.4.\nInstall Run & Build\nOpen terminal and goto project root directory hit npm install && ng serve -o to install dependancies and run project.\nRun ng serve -o for a dev server.\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nOverview\n\nBackend\nUsers can use this project with backend which is developed in Spring Boot(Java)\nhttps://github.com/pravin02/SpringBootRestApp\nFeatures\n1) Admin LTE Integration\n2) Angular 7\n3) Lazy loading\n4) Optimized folder architecture\n5) AG Grid Community version Integration\n6) Custom Action Component\n7) ngx-webcam module to capture profile pic using webcam\n8) compodoc tool integration for source code documentation\n9) ng build --aot --prod --output-hashing none\n10) Toastr Module\n11) UI-Block module\nScreens\n1) Login\n\nAjax Loader\n\n2) register\n\n3) Forgot Password\n\n4) Dashboard\n\n5) Employee List\n\n6) Profile module - i) User Profile\n\n\n7) Profile module - i) Company Profile\n\n\n\n8) Profile module - i) Update Password\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_bootstrap\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nBaseUrlProvider\n\nBaseUrlProvider\n\nAppModule -->\n\nBaseUrlProvider->AppModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nAppModule -->\n\nCommonService->AppModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nAppModule -->\n\nEmployeeService->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\nJWTUtils\n\nJWTUtils\n\nAppModule -->\n\nJWTUtils->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nStatusDirective\n\nStatusDirective\n\nDashboardModule -->\n\nStatusDirective->DashboardModule\n\n\n\n\n\nTestingComponent\n\nTestingComponent\n\nDashboardModule -->\n\nTestingComponent->DashboardModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nEmployeeModule -->\n\nActionComponent->EmployeeModule\n\n\n\n\n\nActionParentComponent\n\nActionParentComponent\n\nEmployeeModule -->\n\nActionParentComponent->EmployeeModule\n\n\n\n\n\nEmployeeListComponent\n\nEmployeeListComponent\n\nEmployeeModule -->\n\nEmployeeListComponent->EmployeeModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nFooterComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nLayoutModule -->\n\nSidebarComponent->LayoutModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nCompanyProfileComponent\n\nCompanyProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nCompanyProfileComponent->ProfileModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            jQuery   (src/.../layout.component.ts)\n                        \n                        \n                            jQuery   (src/.../login.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/layout/layout.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/auth/login/login.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        variable to hold reference of jquery instance\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
